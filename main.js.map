{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AACuD;;;AAEvD,MAAMC,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAE,MAAM;EACjBC,UAAU,EAAE;CACb,EACD;EACEF,IAAI,EAAE,IAAI;EACVG,YAAY,EAAE,MAAM,2IAAmD,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,qBAAqB;CAC1G,CACF;AAMK,MAAOC,gBAAgB;AAAhBA,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA;AAAgB;AAAhBA,gBAAgB;YAHjBT,iEAAoB,CAACC,MAAM,CAAC,EAC5BD,yDAAY;AAAA;;sHAEXS,gBAAgB;IAAAE,UAAAA,yDAAAA;IAAAC,UAFjBZ,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;ACTlB,MAAOa,YAAY;AAAZA,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRzBC,uDAAAA,oBAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACC2C;AAEF;AACT;AAEC;AACqB;AACI;AACE;AACR;;AAiB7D,MAAOQ,SAAS;AAATA,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;QAATA,SAAS;EAAAC,YAFRd,wDAAY;AAAA;AAEba,SAAS;aAJT,CAAC;IAAEE,OAAO,EAAEL,mEAAiB;IAAEM,QAAQ,EAAER,8EAAc;IAAES,KAAK,EAAE;EAAI,CAAE,EAAE;IAAEF,OAAO,EAAEL,mEAAiB;IAAEM,QAAQ,EAAEP,kFAAgB;IAAEQ,KAAK,EAAE;EAAI,CAAE,CAAC;EAAAnB,UANzJQ,oEAAa,EACbK,kEAAgB,EAChBJ,yDAAU,EACVK,4EAAc,EACdhB,iEAAgB;AAAA;;sHAMPiB,SAAS;IAAAK,eAblBlB,wDAAY;IAAAF,UAGZQ,oEAAa,EACbK,kEAAgB,EAChBJ,yDAAU,EACVK,4EAAc,EACdhB,iEAAgB;EAAA;AAAA;;;;;;;;;;;;;;;;AClB0C;;AAGxD,MAAOY,cAAc;EAEzBY,eAAgB;EAEhBC,SAAS,CAACC,OAA6B,EAAEC,IAAiB;IACxD,IAAIC,eAAe,GAAGF,OAAO;IAE7B,IAAIA,OAAO,CAACG,GAAG,CAACC,QAAQ,CAAC,8BAA8B,CAAC,EAAE;MACxDF,eAAe,GAAGF,OAAO,CAACK,KAAK,CAAC;QAC9BF,GAAG,EAAE,GAAGN,gGAAwC,GAAGG,OAAO,CAACG,GAAG,CAACI,OAAO,CAAC,8BAA8B,EAAE,EAAE,CAAC;OAC3G,CAAC;KACH,MAAM,IAAIP,OAAO,CAACG,GAAG,CAACC,QAAQ,CAAC,+BAA+B,CAAC,EAAE;MAChEF,eAAe,GAAGF,OAAO,CAACK,KAAK,CAAC;QAC9BF,GAAG,EAAE,GAAGN,iGAAyC,GAAGG,OAAO,CAACG,GAAG,CAACI,OAAO,CAAC,+BAA+B,EAAE,EAAE,CAAC;OAC7G,CAAC;KACH,MAAM,IAAIP,OAAO,CAACG,GAAG,CAACC,QAAQ,CAAC,sBAAsB,CAAC,EAAE;MACvDF,eAAe,GAAGF,OAAO,CAACK,KAAK,CAAC;QAC9BF,GAAG,EAAE,GAAGN,wFAAgC,GAAGG,OAAO,CAACG,GAAG,CAACI,OAAO,CAAC,sBAAsB,EAAE,EAAE,CAAC;OAC3F,CAAC;;IAGJ,OAAON,IAAI,CAACS,MAAM,CAACR,eAAe,CAAC;EACrC;;AAtBWhB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAyB,SAAdzB,cAAc;AAAA;;;;;;;;;;;;;;;;;ACCmB;AACF;;AAGtC,MAAOC,gBAAgB;EAE3BW,eAAgB;EAEhBC,SAAS,CAACC,OAA6B,EAAEC,IAAiB;IACxD,OAAOA,IAAI,CAACS,MAAM,CAACV,OAAO,CAAC,CAACc,IAAI,CAC9BD,0DAAU,CAAEE,KAAK,IAAI;MACnB,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;QACxB,IAAIC,OAAO,GAAG,mEAAmEF,KAAK,CAACC,MAAM,EAAE;QAC/F,OAAOJ,gDAAU,CAAC,MAAM,IAAIM,KAAK,CAACD,OAAO,CAAC,CAAC;OAC5C,MAAM;QACL,OAAOL,gDAAU,CAACG,KAAK,CAAC;;IAE5B,CAAC,CAAC,CACH;EACH;;AAfW5B,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAwB,SAAhBxB,gBAAgB;AAAA;;;;;;;;;;;;;;;;;ACV0B;AACkB;;;AAEzE,MAAMrB,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,IAAI;EACVqD,SAAS,EAAED,kFAAiBA;CAC7B,CACF;AAMK,MAAO9C,qBAAqB;AAArBA,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA;AAAqB;AAArBA,qBAAqB;YAHtBR,kEAAqB,CAACC,MAAM,CAAC,EAC7BD,yDAAY;AAAA;;sHAEXQ,qBAAqB;IAAAG,UAAAA,yDAAAA;IAAAC,UAFtBZ,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;ACZuB;AAEoB;AACM;;AAYnE,MAAOyB,cAAc;AAAdA,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA;AAAc;AAAdA,cAAc;YAJvBgC,yDAAY,EACZjD,4EAAqB;AAAA;;sHAGZiB,cAAc;IAAAM,eAPvBuB,kFAAiB;IAAA3C,UAGjB8C,yDAAY,EACZjD,4EAAqB;EAAA;AAAA;;;;;;;;;;;;;;;;;;ACNnB,MAAO8C,iBAAiB;AAAjBA,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAxC;EAAAC;EAAAC;EAAA0C;EAAAzC;IAAA;MCP9BC,4DAAAA,aAA4B;MAGYA,oDAAAA,QAAC;MAAAA,0DAAAA,EAAO;MAC1CA,4DAAAA,cAAkC;MAAAA,oDAAAA,QAAC;MAAAA,0DAAAA,EAAO;MAC1CA,4DAAAA,cAAkC;MAAAA,oDAAAA,QAAC;MAAAA,0DAAAA,EAAO;MAE5CA,4DAAAA,YAAmB;MAAAA,oDAAAA,sBAAc;MAAAA,0DAAAA,EAAK;MACtCA,4DAAAA,YACG;MAAoCA,oDAAAA,sBAAc;MAAAA,0DAAAA,EAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLtC;;;;;;;;;ICGxBA,uDAAAA,aACqF;;;;;;IAAjFA,yDAAAA,0DAA4D;IADfA,yDAAAA,wCAAmC;;;ADIlF,MAAO0C,kBAAkB;EAQ7B3B,YACU4B,qBAA4C,EAC5CC,aAA4B,EAC5BC,kBAAsC;IAFtC,0BAAqB,GAArBF,qBAAqB;IACrB,kBAAa,GAAbC,aAAa;IACb,uBAAkB,GAAlBC,kBAAkB;IAV5B,iBAAY,GAAW,CAAC;IAqGxB,oBAAe,GAAW,kCAAkC;EA1FxD;EAEJC,QAAQ;IACN,IAAI,CAACC,cAAc,EAAE;IAErB,IAAI,CAACH,aAAa,CAACI,QAAQ,EAAE,CAACC,SAAS,CAAEC,MAAM,IAAI;MACjD,IAAIA,MAAM,EACR,IAAI,CAACC,aAAa,GAAGD,MAAM;MAC7B,IAAI,IAAI,CAACC,aAAa,EAAE;QACtB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACD,aAAa,CAACE,YAAY,CAACC,KAAK,CAAC,GAAG,CAAC;QAC3D,IAAI,IAAI,CAACF,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,CAACA,SAAS,CAAC,IAAI,CAACA,SAAS,CAACG,MAAM,GAAG,CAAC,CAAC,EACjE,IAAI,CAACV,kBAAkB,CAACW,aAAa,CACnC,GAAG,IAAI,CAACJ,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,CAACA,SAAS,CAAC,IAAI,CAACA,SAAS,CAACG,MAAM,CAAC,EAAE,CACjE,CAACN,SAAS,CAAC;UACV/B,IAAI,EAAGuC,QAAa,IAAI;YACtB,IAAI,CAACC,MAAM,GAAGD,QAAQ,CAACE,OAAO;UAChC;SACD,CAAC,CAAC,KAEH,IAAI,CAACd,kBAAkB,CAACW,aAAa,CACnC,GAAG,IAAI,CAACJ,SAAS,CAAC,CAAC,CAAC,EAAE,CACvB,CAACH,SAAS,CAAC;UACV/B,IAAI,EAAGuC,QAAa,IAAI;YACtB,IAAI,CAACC,MAAM,GAAGD,QAAQ,CAACE,OAAO;UAChC;SACD,CAAC;;IAGR,CAAC,CAAC;EAEJ;EAGAC,QAAQ;IACN,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,aAAa,CAAC;EAEvC;EAEAD,YAAY,CAACE,KAAa;IACxB,IAAI,CAACpB,qBAAqB,CAACqB,sBAAsB,CAACD,KAAK,CAAC,CAACd,SAAS,CAAC;MACjE/B,IAAI,EAAGgC,MAAM,IAAI;QACf,IAAI,CAACC,aAAa,GAAGD,MAAM,CAAC,CAAC,CAAC;QAC9B,IAAI,IAAI,CAACC,aAAa,EAAE;UACtB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACD,aAAa,CAACE,YAAY,CAACC,KAAK,CAAC,GAAG,CAAC;UAC3D,IAAI,IAAI,CAACF,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,CAACA,SAAS,CAAC,IAAI,CAACA,SAAS,CAACG,MAAM,GAAG,CAAC,CAAC,EACjE,IAAI,CAACV,kBAAkB,CAACW,aAAa,CACnC,GAAG,IAAI,CAACJ,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,CAACA,SAAS,CAAC,IAAI,CAACA,SAAS,CAACG,MAAM,CAAC,EAAE,CACjE,CAACN,SAAS,CAAC;YACV/B,IAAI,EAAGuC,QAAa,IAAI;cACtB,IAAI,CAACC,MAAM,GAAGD,QAAQ,CAACE,OAAO;YAChC;WACD,CAAC,CAAC,KAEH,IAAI,CAACd,kBAAkB,CAACW,aAAa,CACnC,GAAG,IAAI,CAACJ,SAAS,CAAC,CAAC,CAAC,EAAE,CACvB,CAACH,SAAS,CAAC;YACV/B,IAAI,EAAGuC,QAAa,IAAI;cACtB,IAAI,CAACC,MAAM,GAAGD,QAAQ,CAACE,OAAO;YAChC;WACD,CAAC;SACL,MACI;UACH,IAAI,CAACd,kBAAkB,CAACW,aAAa,CACnC,UAAU,CACX,CAACP,SAAS,CAAC;YACV/B,IAAI,EAAGuC,QAAa,IAAI;cACtB,IAAI,CAACC,MAAM,GAAGD,QAAQ,CAACE,OAAO;YAChC;WACD,CAAC;UACFlB,mDAAY,CAAC,mBAAmB,EAAE,WAAW,EAAE;YAC7CwB,WAAW,EAAE,IAAI;YACjBC,WAAW,EAAE,KAAK;YAClBC,OAAO,EAAE,IAAI;YACbC,eAAe,EAAE,IAAI;YACrBC,YAAY,EAAE,KAAK;YACnBC,UAAU,EAAE;WACb,CAAC;;QAEJ,IAAI,CAAC1B,aAAa,CAAC2B,QAAQ,CAAC,IAAI,CAACpB,aAAa,CAAC;MACjD;KACD,CAAC;EACJ;EAEAJ,cAAc;IACZyB,WAAW,CAAC,MAAK;MACf,IAAI,IAAI,CAACd,MAAM,EACb,IAAI,CAACe,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY,GAAG,CAAC,IAAI,IAAI,CAACf,MAAM,CAACH,MAAM;IACpE,CAAC,EAAE,IAAI,CAAC;EACV;EAIAmB,iBAAiB;IACf,IAAI,CAACC,eAAe,GAAG,EAAE;EAC3B;EAEAC,kBAAkB;IAChB,IAAI,CAACD,eAAe,GAAG,kCAAkC;EAC3D;;AA9GWjC,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAA9C;EAAAC;EAAAC;EAAA0C;EAAAzC;IAAA;MCX/BC,4DAAAA,aAAoB;MACKA,wDAAAA;QAAA,OAAU6E,cAAU;MAAA,EAAC;MACtC7E,4DAAAA,eAC4C;MADOA,wDAAAA;QAAA,OAAS6E,uBAAmB;MAAA,EAAC;QAAA,OAASA,wBAAoB;MAAA,EAA7B;QAAA;MAAA;MAAhF7E,0DAAAA,EAC4C;MAGpDA,4DAAAA,aAAuB;MACnBA,wDAAAA,sDACqF;MACzFA,0DAAAA,EAAM;;;MAPqBA,uDAAAA,GAA+B;MAA/BA,wDAAAA,oCAA+B;MAK/BA,uDAAAA,GAAW;MAAXA,wDAAAA,uBAAW;;;;;;;;;;;;;;;;;;;;;;;ACNS;AACwB;AAC1B;;AAcvC,MAAO+E,YAAY;AAAZA,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA;AAAY;AAAZA,YAAY;YALrBxC,yDAAY,EACZuC,uDAAW;AAAA;;sHAIFC,YAAY;IAAAlE,eARrB6B,gFAAkB;IAAAjD,UAGlB8C,yDAAY,EACZuC,uDAAW;IAAApF,UAEHgD,gFAAkB;EAAA;AAAA;;;;;;;;;;;;;;ACfvB,MAAM5B,WAAW,GAAG;EACvBS,4BAA4B,EAAE,4CAA4C;EAC1EE,6BAA6B,EAAE,6CAA6C;EAC5EC,oBAAoB,EAAE;CACzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICFD1B,uDAAAA,yBAC0C;;;;IADFA,wDAAAA,2CAAmC;;;;;IAG3EA,uDAAAA,0BAC2C;;;;IADFA,wDAAAA,2CAAmC;;;ACOtE,MAAOgF,gBAAgB;EA4B3BjE,YAAoBkE,sBAA8C,EAAUC,cAA8B,EAAUtC,aAA4B;IAA5H,2BAAsB,GAAtBqC,sBAAsB;IAAkC,mBAAc,GAAdC,cAAc;IAA0B,kBAAa,GAAbtC,aAAa;IAvB1H,SAAI,GAAS,IAAIuC,IAAI,EAAE;IACvB,gBAAW,GAAWC,MAAM,CAAC,IAAI,CAACC,IAAI,CAACC,QAAQ,EAAE,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAuBnF,MAAMpE,GAAG,GAAGqE,MAAM,CAACC,QAAQ,CAACC,QAAQ;IACpC,MAAMC,QAAQ,GAAGxE,GAAG,CAACkC,KAAK,CAAC,GAAG,CAAC;IAC/B,IAAIsC,QAAQ,CAACrC,MAAM,KAAK,CAAC,EAAE;MACzB,IAAI,CAACsC,SAAS,GAAGT,MAAM,CAACQ,QAAQ,CAACA,QAAQ,CAACrC,MAAM,GAAG,CAAC,CAAC,CAAC;MACtD,IAAI,CAACuC,QAAQ,GAAGV,MAAM,CAACQ,QAAQ,CAACA,QAAQ,CAACrC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;KAC1D,MAAM,IAAIqC,QAAQ,CAACrC,MAAM,KAAK,CAAC,EAAE;MAChC,IAAI,CAACuC,QAAQ,GAAGV,MAAM,CAACQ,QAAQ,CAACA,QAAQ,CAACrC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;MACzD,IAAI,CAACsC,SAAS,GAAGT,MAAM,CAAC,IAAI,CAACW,WAAW,CAAC;;EAE7C;EAEAjD,QAAQ;IACN,IAAI,CAACmC,sBAAsB,CAACe,6BAA6B,EAAE,CAAC/C,SAAS,CAClEyC,QAAQ,IAAI;MACX,IAAI,CAACO,eAAe,GAAGP,QAAQ;IACjC,CAAC,CACF;EACH;;AA9CWV,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAApF;EAAAC;EAAAC;EAAA0C;EAAAzC;IAAA;MDZ7BC,4DAAAA,qBAAgB;MAAAA,oDAAAA,8BAAqB;MAAAA,0DAAAA,EAAiB;MAEtDA,wDAAAA,4EAC0C;MAE1CA,wDAAAA,8EAC2C;MAE3CA,uDAAAA,6BAC8C;;;MAP5BA,uDAAAA,GAAoB;MAApBA,wDAAAA,4BAAoB;MAGnBA,uDAAAA,GAAoB;MAApBA,wDAAAA,4BAAoB;MAGlBA,uDAAAA,GAAmC;MAAnCA,wDAAAA,wCAAmC;MAGxCA,uDAAAA,GAAmC;MAAnCA,wDAAAA,wCAAmC;;;;;;;;;;;;;;;;;;;;;;;AEVJ;AACwB;AACxB;;AAgBzC,MAAOmG,kBAAkB;AAAlBA,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA;AAAkB;AAAlBA,kBAAkB;YAP3B5D,yDAAY,EACZzD,yDAAY;AAAA;;sHAMHqH,kBAAkB;IAAAtF,eAV3BqF,gFAAkB;IAAAzG,UAGlB8C,yDAAY,EACZzD,yDAAY;IAAAY,UAGZwG,gFAAkB;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICZVlG,4DAAAA,aAAwE;IAG5DA,oDAAAA,GACA;IAAAA,uDAAAA,aAA4E;IAC5EA,oDAAAA,GAAkC;IAAAA,uDAAAA,SAAI;IACtCA,oDAAAA,GAAgE;IAAAA,uDAAAA,UAAI;IACpEA,oDAAAA,IAEA;IAAAA,uDAAAA,UAAI;IACJA,oDAAAA,IACJ;IAAAA,0DAAAA,EAAM;;;;;;IAVmBA,uDAAAA,GAA8B;IAA9BA,wDAAAA,eAAAA,6DAAAA,mBAA8B;IAEnDA,uDAAAA,GACA;IADAA,gEAAAA,sCACA;IAAKA,uDAAAA,GAAmD;IAAnDA,oEAAAA,mEAAAA,2DAAAA,CAAmD;IACxDA,uDAAAA,GAAkC;IAAlCA,gEAAAA,iDAAkC;IAClCA,uDAAAA,GAAgE;IAAhEA,gEAAAA,mGAAgE;IAChEA,uDAAAA,GAEA;IAFAA,gEAAAA,4HAEA;IACAA,uDAAAA,GACJ;IADIA,gEAAAA,0EACJ;;;;;IAZZA,4DAAAA,aAAuC;IACnCA,wDAAAA,8DAaM;IACVA,0DAAAA,EAAM;;;;IAdgCA,uDAAAA,GAAuB;IAAvBA,wDAAAA,sCAAuB;;;ACU/D,MAAOkG,kBAAkB;EAoB7BnF,YAAoBmE,cAA8B,EAAUkB,MAAc,EAAUxD,aAA4B,EAAUyD,cAA8B;IAApI,mBAAc,GAAdnB,cAAc;IAA0B,WAAM,GAANkB,MAAM;IAAkB,kBAAa,GAAbxD,aAAa;IAAyB,mBAAc,GAAdyD,cAAc;EAAoB;EAE5JvD,QAAQ;IACN,IAAI,CAACF,aAAa,CAACI,QAAQ,EAAE,CAACC,SAAS,CAAEC,MAAM,IAAI;MACjD,IAAI,CAACoD,WAAW,GAAGpD,MAAM;MACzB,IAAI,CAACqD,gBAAgB,EAAE;IACzB,CAAC,CAAC;EACJ;EAEAC,WAAW,CAACC,OAAsB;IAChC,IAAIA,OAAO,CAAC,iBAAiB,CAAC,IAAIA,OAAO,CAAC,iBAAiB,CAAC,CAACC,YAAY,EAAE;MACzE,IAAI,CAACH,gBAAgB,EAAE;;EAE3B;EACAA,gBAAgB;IACd,IAAI,IAAI,CAACD,WAAW,EAClB,IAAI,CAACpB,cAAc,CAACyB,kBAAkB,CAAC,IAAI,CAACL,WAAW,CAACM,GAAG,EAAE,IAAI,CAACN,WAAW,CAACO,GAAG,CAAC,CAC/E5D,SAAS,CACP6D,OAAO,IAAI;MACV,IAAI,CAACC,KAAK,GAAGD,OAAO,CAACE,KAAK,CAACC,IAAI;MAC/B,IAAI,CAACC,mBAAmB,GAAGJ,OAAO,CAACE,KAAK,CAACG,kBAAkB;MAC3D,IAAI,CAACC,mBAAmB,GAAGN,OAAO,CAACE,KAAK,CAACK,kBAAkB;MAC3D,IAAI,CAACC,2BAA2B,GAAGR,OAAO,CAACE,KAAK,CAACO,wBAAwB;MACzE,IAAI,CAACC,2BAA2B,GAAGV,OAAO,CAACE,KAAK,CAACS,wBAAwB;MACzE,IAAI,CAACC,wCAAwC,GAAGZ,OAAO,CAACE,KAAK,CAACW,8BAA8B;MAC5F,IAAI,CAACC,wBAAwB,GAAGd,OAAO,CAACE,KAAK,CAACa,WAAW,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAAC8C,qBAAqB,CAACD,IAAI,CAAC,CAAC;MACtH,IAAI,CAACE,iBAAiB,GAAGnB,OAAO,CAACE,KAAK,CAACa,WAAW,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAACgD,cAAc,CAACH,IAAI,CAAC,CAAC;MACxG,IAAI,CAACI,iBAAiB,GAAGrB,OAAO,CAACE,KAAK,CAACoB,0BAA0B;MACjE,IAAI,CAACC,aAAa,GAAGvB,OAAO,CAACE,KAAK,CAACsB,iBAAiB;MACpD,OAAO,IAAI,CAACC,aAAa,GAAGzB,OAAO,CAACE,KAAK;IAC3C,CAAC,CACF,CAAC,KACD,IAAI,IAAI,CAACf,eAAe,EAC3B,IAAI,CAACf,cAAc,CAACyB,kBAAkB,CAAC,IAAI,CAACV,eAAe,CAACW,GAAG,EAAE,IAAI,CAACX,eAAe,CAACY,GAAG,CAAC,CACvF5D,SAAS,CACP6D,OAAO,IAAI;MACV,IAAI,CAACC,KAAK,GAAGD,OAAO,CAACE,KAAK,CAACC,IAAI;MAC/B,IAAI,CAACC,mBAAmB,GAAGJ,OAAO,CAACE,KAAK,CAACG,kBAAkB;MAC3D,IAAI,CAACC,mBAAmB,GAAGN,OAAO,CAACE,KAAK,CAACK,kBAAkB;MAC3D,IAAI,CAACC,2BAA2B,GAAGR,OAAO,CAACE,KAAK,CAACO,wBAAwB;MACzE,IAAI,CAACC,2BAA2B,GAAGV,OAAO,CAACE,KAAK,CAACS,wBAAwB;MACzE,IAAI,CAACC,wCAAwC,GAAGZ,OAAO,CAACE,KAAK,CAACW,8BAA8B;MAC5F,IAAI,CAACC,wBAAwB,GAAGd,OAAO,CAACE,KAAK,CAACa,WAAW,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAAC8C,qBAAqB,CAACD,IAAI,CAAC,CAAC;MACtH,IAAI,CAACE,iBAAiB,GAAGnB,OAAO,CAACE,KAAK,CAACa,WAAW,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAACgD,cAAc,CAACH,IAAI,CAAC,CAAC;MACxG,IAAI,CAACI,iBAAiB,GAAGrB,OAAO,CAACE,KAAK,CAACoB,0BAA0B;MACjE,IAAI,CAACC,aAAa,GAAGvB,OAAO,CAACE,KAAK,CAACsB,iBAAiB;MACpD,OAAO,IAAI,CAACC,aAAa,GAAGzB,OAAO,CAACE,KAAK;IAC3C,CAAC,CACF;EACP;EAGAwB,UAAU,CAACnD,IAAY;IACrB,MAAMoD,QAAQ,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC;IAC1F,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;IAExI,MAAMC,OAAO,GAAG,IAAIxD,IAAI,CAACE,IAAI,CAAC;IAC9B,MAAMuD,SAAS,GAAGH,QAAQ,CAACE,OAAO,CAACE,MAAM,EAAE,CAAC;IAC5C,MAAMC,UAAU,GAAGH,OAAO,CAACI,OAAO,EAAE;IACpC,MAAMC,KAAK,GAAGN,MAAM,CAACC,OAAO,CAACM,QAAQ,EAAE,CAAC;IAExC,OAAO,GAAGL,SAAS,IAAIE,UAAU,IAAIE,KAAK,EAAE;EAC9C;;AAlFW9C,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAtG;EAAAsJ;IAAAjD;IAAAkD;IAAArC;IAAAyB;IAAAxB;IAAAqC;IAAAxB;IAAAK;IAAAf;IAAAE;IAAAE;IAAAE;IAAAE;EAAA;EAAA2B,WAAAA,kEAAAA;EAAAxJ;EAAAC;EAAA0C;EAAAzC;IAAA;MDd/BC,4DAAAA,aAAuC;MAC5BA,oDAAAA,mCAAuB;MAAAA,0DAAAA,EAAQ;MACtCA,4DAAAA,aAAiD;MAC7CA,wDAAAA,sDAeM;MACVA,0DAAAA,EAAM;;;MAhBIA,uDAAAA,GAAmB;MAAnBA,wDAAAA,2BAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEC3BA,4DAAAA,eAAkE;IAAAA,oDAAAA,GAElE;IAAAA,0DAAAA,EAAO;;;;IAF2DA,uDAAAA,GAElE;IAFkEA,gEAAAA,4FAElE;;;;;IACAA,4DAAAA,cAA6C;IAAAA,oDAAAA,GAC7C;IAAAA,0DAAAA,EAAM;;;;IADuCA,uDAAAA,GAC7C;IAD6CA,gEAAAA,0CAC7C;;;;;IAEAA,4DAAAA,UAAiC;IAAAA,oDAAAA,GAA4D;IAAAA,0DAAAA,EAAM;;;;IAAlEA,uDAAAA,GAA4D;IAA5DA,gEAAAA,gGAA4D;;;;;IAC7FA,4DAAAA,cAA8C;IAC5CA,oDAAAA,GAAqC;IAAAA,0DAAAA,EAAM;;;;IAA3CA,uDAAAA,GAAqC;IAArCA,gEAAAA,wDAAqC;;;;;IACvCA,4DAAAA,UAAiC;IAACA,oDAAAA,GACa;IAAAA,0DAAAA,EAAM;;;;IADnBA,uDAAAA,GACa;IADbA,gEAAAA,0EACa;;;;;IAG3CA,uDAAAA,cAC6F;;;;IAA3FA,oEAAAA,sFAAAA,2DAAAA,CAAuE;;;;;IACzEA,uDAAAA,cACkG;;;;IAAhGA,oEAAAA,4FAAAA,2DAAAA,CAA4E;;;;;IALlFA,4DAAAA,cAA6D;IAEzDA,wDAAAA,oEAC6F;IAC7FA,wDAAAA,oEACkG;IAClGA,oDAAAA,GACF;IAAAA,0DAAAA,EAAK;IACLA,oDAAAA,GACF;IAAAA,0DAAAA,EAAM;;;;IAPIA,uDAAAA,GAA2D;IAA3DA,wDAAAA,6EAA2D;IAE3DA,uDAAAA,GAA4D;IAA5DA,wDAAAA,8EAA4D;IAElEA,uDAAAA,GACF;IADEA,gEAAAA,kDACF;IACAA,uDAAAA,GACF;IADEA,gEAAAA,oFACF;;;;;IAyBMA,4DAAAA,cAAoD;IAClDA,uDAAAA,YAAmC;IAACA,oDAAAA,GACtC;IAAAA,0DAAAA,EAAM;;;;IADgCA,uDAAAA,GACtC;IADsCA,gEAAAA,4DACtC;;;;;;;;;;IAaEA,uDAAAA,YACwF;;;;IAAtFA,wDAAAA,YAAAA,6DAAAA,yEAAiF;;;;;IACnFA,uDAAAA,YACwF;;;;IAAtFA,wDAAAA,YAAAA,6DAAAA,yEAAiF;;;;;IAZvFA,4DAAAA,cAAsD;IACvBA,oDAAAA,aAAM;IAAAA,0DAAAA,EAAM;IAEzCA,4DAAAA,cAAwB;IAAAA,uDAAAA,YAAgC;IAACA,oDAAAA,qBAAa;IAAAA,uDAAAA,aAAuB;IAAAA,oDAAAA,GAG7F;IAAAA,0DAAAA,EAAM;IACNA,4DAAAA,cAA4B;IAC1BA,uDAAAA,YAAqC;IAACA,oDAAAA,uBACtC;IAAAA,wDAAAA,mEACwF;IACxFA,wDAAAA,mEACwF;IACxFA,uDAAAA,cAAyB;IACzBA,4DAAAA,YAAM;IACJA,oDAAAA,IACF;IAAAA,0DAAAA,EAAO;;;;IAboFA,uDAAAA,GAG7F;IAH6FA,gEAAAA,oDAG7F;IAGsCA,uDAAAA,GAAwC;IAAxCA,wDAAAA,mDAAwC;IAExCA,uDAAAA,GAAwC;IAAxCA,wDAAAA,mDAAwC;IAI1EA,uDAAAA,GACF;IADEA,gEAAAA,6EACF;;;;;IAvEdA,4DAAAA,aAA6C;IAEzCA,uDAAAA,aAAuE;IACvEA,4DAAAA,aAAwB;IACtBA,wDAAAA,+DAEO;IACPA,wDAAAA,6DACM;IAENA,wDAAAA,6DAAmG;IACnGA,wDAAAA,6DAC6C;IAC7CA,wDAAAA,6DACqD;IACrDA,wDAAAA,6DASM;IACRA,0DAAAA,EAAM;IAERA,4DAAAA,cAAwB;IAKUA,oDAAAA,kBAAU;IAAAA,0DAAAA,EAAM;IACxCA,4DAAAA,eAAwB;IAAAA,oDAAAA,IAAqC;IAAAA,0DAAAA,EAAM;IAGvEA,4DAAAA,eAAiB;IAEWA,oDAAAA,kBAAU;IAAAA,0DAAAA,EAAM;IACxCA,4DAAAA,eAAwB;IAAAA,oDAAAA,IAAqC;IAAAA,0DAAAA,EAAM;IAIzEA,uDAAAA,UAAI;IACJA,4DAAAA,eAAiB;IAGaA,oDAAAA,uBAAU;IAAAA,0DAAAA,EAAM;IACxCA,uDAAAA,eAAoC;IACpCA,wDAAAA,gEAEM;IACRA,0DAAAA,EAAM;IAERA,4DAAAA,eAAiB;IACfA,wDAAAA,iEAkBM;IACRA,0DAAAA,EAAM;;;;IAtEEA,uDAAAA,GAAqC;IAArCA,wDAAAA,uDAAqC;IAGtCA,uDAAAA,GAAiB;IAAjBA,wDAAAA,4BAAiB;IAGpBA,uDAAAA,GAAyB;IAAzBA,wDAAAA,oCAAyB;IACzBA,uDAAAA,GAAyB;IAAzBA,wDAAAA,oCAAyB;IAEzBA,uDAAAA,GAAyB;IAAzBA,wDAAAA,oCAAyB;IAEzBA,uDAAAA,GAAyB;IAAzBA,wDAAAA,oCAAyB;IAkBDA,uDAAAA,GAAqC;IAArCA,gEAAAA,4DAAqC;IAMrCA,uDAAAA,GAAqC;IAArCA,gEAAAA,4DAAqC;IAUvDA,uDAAAA,GAAyB;IAAzBA,wDAAAA,oCAAyB;IAM3BA,uDAAAA,GAAyB;IAAzBA,wDAAAA,oCAAyB;;;AC3CnC,MAAOsJ,mBAAmB;EA0C9BvI,YAAoBmE,cAA8B,EAAUtC,aAA4B,EAAUyD,cAA8B;IAA5G,mBAAc,GAAdnB,cAAc;IAA0B,kBAAa,GAAbtC,aAAa;IAAyB,mBAAc,GAAdyD,cAAc;IAXzG,SAAI,GAAS,IAAIlB,IAAI,EAAE;IACvB,gBAAW,GAAWC,MAAM,CAAC,IAAI,CAACC,IAAI,CAACC,QAAQ,EAAE,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAWnF,IAAI,CAAC+D,SAAS,EAAE;EAClB;EAEAA,SAAS;IACP,MAAMnI,GAAG,GAAGqE,MAAM,CAACC,QAAQ,CAACC,QAAQ;IACpC,MAAMC,QAAQ,GAAGxE,GAAG,CAACkC,KAAK,CAAC,GAAG,CAAC;IAC/B,IAAIsC,QAAQ,CAACrC,MAAM,KAAK,CAAC,EAAE;MACzB,IAAI,CAACsC,SAAS,GAAGT,MAAM,CAACQ,QAAQ,CAACA,QAAQ,CAACrC,MAAM,GAAG,CAAC,CAAC,CAAC;MACtD,IAAI,CAACuC,QAAQ,GAAGV,MAAM,CAACQ,QAAQ,CAACA,QAAQ,CAACrC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;KAC1D,MAAM,IAAIqC,QAAQ,CAACrC,MAAM,KAAK,CAAC,EAAE;MAChC,IAAI,CAACuC,QAAQ,GAAGV,MAAM,CAACQ,QAAQ,CAACA,QAAQ,CAACrC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;MACzD,IAAI,CAACsC,SAAS,GAAG,IAAI,CAACE,WAAW;;EAErC;EAEAjD,QAAQ;IACN,IAAI,CAACF,aAAa,CAACI,QAAQ,EAAE,CAACC,SAAS,CAAEC,MAAM,IAAI;MACjD,IAAI,CAACoD,WAAW,GAAGpD,MAAM;MACzB,IAAI,CAACqD,gBAAgB,EAAE;MACvB,IAAI,CAACiD,iBAAiB,CAAC,IAAI,CAAC1D,QAAQ,CAAC;IACvC,CAAC,CAAC;IACF,IAAI,CAACO,cAAc,CAACoD,oBAAoB,EAAE,CAACxG,SAAS,CAAC,MAAK;MACxD,IAAI,CAACsG,SAAS,EAAE;MAChB,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAAC1D,QAAQ,CAAC;IACvC,CAAC,CAAC;EACJ;EAEAU,WAAW,CAACC,OAAsB;IAChC,IAAIA,OAAO,CAAC,iBAAiB,CAAC,IAAIA,OAAO,CAAC,iBAAiB,CAAC,CAACC,YAAY,EAAE;MACzE,IAAI,CAACH,gBAAgB,EAAE;MACvB,IAAI,CAACiD,iBAAiB,CAAC,IAAI,CAAC1D,QAAQ,CAAC;;EAEzC;EAGA0C,UAAU,CAACnD,IAAY;IACrB,MAAMoD,QAAQ,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC;IAC1F,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;IAExI,MAAMC,OAAO,GAAG,IAAIxD,IAAI,CAACE,IAAI,CAAC;IAC9B,MAAMuD,SAAS,GAAGH,QAAQ,CAACE,OAAO,CAACE,MAAM,EAAE,CAAC;IAC5C,MAAMC,UAAU,GAAGH,OAAO,CAACI,OAAO,EAAE;IACpC,MAAMC,KAAK,GAAGN,MAAM,CAACC,OAAO,CAACM,QAAQ,EAAE,CAAC;IAExC,OAAO,GAAGL,SAAS,IAAIE,UAAU,IAAIE,KAAK,EAAE;EAC9C;EAEAzC,gBAAgB;IACd,IAAI,IAAI,CAACD,WAAW,EAClB,IAAI,CAACpB,cAAc,CAACyB,kBAAkB,CAAC,IAAI,CAACL,WAAW,CAACM,GAAG,EAAE,IAAI,CAACN,WAAW,CAACO,GAAG,CAAC,CAC/E5D,SAAS,CACP6D,OAAO,IAAI;MACV,IAAI,CAACC,KAAK,GAAGD,OAAO,CAACE,KAAK,CAACC,IAAI;MAC/B,IAAI,CAACC,mBAAmB,GAAGJ,OAAO,CAACE,KAAK,CAACG,kBAAkB;MAC3D,IAAI,CAACC,mBAAmB,GAAGN,OAAO,CAACE,KAAK,CAACK,kBAAkB;MAC3D,IAAI,CAACC,2BAA2B,GAAGR,OAAO,CAACE,KAAK,CAACO,wBAAwB;MACzE,IAAI,CAACC,2BAA2B,GAAGV,OAAO,CAACE,KAAK,CAACS,wBAAwB;MACzE,IAAI,CAACC,wCAAwC,GAAGZ,OAAO,CAACE,KAAK,CAACW,8BAA8B;MAC5F,IAAI,CAACC,wBAAwB,GAAGd,OAAO,CAACE,KAAK,CAACa,WAAW,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAAC8C,qBAAqB,CAACD,IAAI,CAAC,CAAC;MACtH,IAAI,CAACE,iBAAiB,GAAGnB,OAAO,CAACE,KAAK,CAACa,WAAW,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAACgD,cAAc,CAACH,IAAI,CAAC,CAAC;MACxG,IAAI,CAACI,iBAAiB,GAAGrB,OAAO,CAACE,KAAK,CAACoB,0BAA0B;MACjE,IAAI,CAACC,aAAa,GAAGvB,OAAO,CAACE,KAAK,CAACsB,iBAAiB;MACpD,OAAO,IAAI,CAACC,aAAa,GAAGzB,OAAO,CAACE,KAAK;IAC3C,CAAC,CACF,CAAC,KACD,IAAI,IAAI,CAACf,eAAe,EAC3B,IAAI,CAACf,cAAc,CAACyB,kBAAkB,CAAC,IAAI,CAACV,eAAe,CAACW,GAAG,EAAE,IAAI,CAACX,eAAe,CAACY,GAAG,CAAC,CACvF5D,SAAS,CACP6D,OAAO,IAAI;MACV,IAAI,CAACC,KAAK,GAAGD,OAAO,CAACE,KAAK,CAACC,IAAI;MAC/B,IAAI,CAACC,mBAAmB,GAAGJ,OAAO,CAACE,KAAK,CAACG,kBAAkB;MAC3D,IAAI,CAACC,mBAAmB,GAAGN,OAAO,CAACE,KAAK,CAACK,kBAAkB;MAC3D,IAAI,CAACC,2BAA2B,GAAGR,OAAO,CAACE,KAAK,CAACO,wBAAwB;MACzE,IAAI,CAACC,2BAA2B,GAAGV,OAAO,CAACE,KAAK,CAACS,wBAAwB;MACzE,IAAI,CAACC,wCAAwC,GAAGZ,OAAO,CAACE,KAAK,CAACW,8BAA8B;MAC5F,IAAI,CAACC,wBAAwB,GAAGd,OAAO,CAACE,KAAK,CAACa,WAAW,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAAC8C,qBAAqB,CAACD,IAAI,CAAC,CAAC;MACtH,IAAI,CAACE,iBAAiB,GAAGnB,OAAO,CAACE,KAAK,CAACa,WAAW,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAACgD,cAAc,CAACH,IAAI,CAAC,CAAC;MACxG,IAAI,CAACI,iBAAiB,GAAGrB,OAAO,CAACE,KAAK,CAACoB,0BAA0B;MACjE,IAAI,CAACC,aAAa,GAAGvB,OAAO,CAACE,KAAK,CAACsB,iBAAiB;MACpD,OAAO,IAAI,CAACC,aAAa,GAAGzB,OAAO,CAACE,KAAK;IAC3C,CAAC,CACF;EACP;EAEAwC,iBAAiB,CAAC1D,QAAgB;IAChC,MAAM4D,UAAU,GAAG5D,QAAQ,GAAG,EAAE;IAChC,MAAM6D,QAAQ,GAAGD,UAAU,GAAG,EAAE;IAChC,IAAI,IAAI,CAACpD,WAAW,EAClB,IAAI,CAACpB,cAAc,CAACyB,kBAAkB,CAAC,IAAI,CAACL,WAAW,CAACM,GAAG,EAAE,IAAI,CAACN,WAAW,CAACO,GAAG,CAAC,CAC/E5D,SAAS,CACP6D,OAAO,IAAI;MACV,IAAI,CAAC8C,cAAc,GAAG9C,OAAO,CAAC+C,MAAM;MACpC,IAAI,CAACC,KAAK,GAAGhD,OAAO,CAAC+C,MAAM,CAAC5C,IAAI,CAAC8C,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACzC,IAAI,IAAIA,IAAI,CAAC/B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5F,IAAI,CAAC0G,iBAAiB,GAAGlD,OAAO,CAAC+C,MAAM,CAACI,cAAc,CAACF,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MAClF,IAAI,CAACO,yBAAyB,GAAGpD,OAAO,CAAC+C,MAAM,CAACM,oBAAoB,CAACJ,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MAChG,IAAI,CAACS,qCAAqC,GAAGtD,OAAO,CAAC+C,MAAM,CAACQ,yBAAyB,CAACN,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MACjH,IAAI,CAACW,qBAAqB,GAAGxD,OAAO,CAAC+C,MAAM,CAACU,mBAAmB,CAACR,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MAC3F,IAAI,CAACa,yBAAyB,GAAG1D,OAAO,CAAC+C,MAAM,CAAChC,WAAW,CAACkC,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAAC8C,qBAAqB,CAACD,IAAI,CAAC,CAAC;MACpJ,IAAI,CAAC0C,kBAAkB,GAAG,IAAI,CAACb,cAAc,CAACc,MAAM,CAACX,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MAChF,IAAI,CAACgB,kBAAkB,GAAG,IAAI,CAACf,cAAc,CAAC/B,WAAW,CAACkC,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAACgD,cAAc,CAACH,IAAI,CAAC,CAAC;MAC3I,IAAI,CAAC6C,uBAAuB,GAAG,IAAI,CAAChB,cAAc,CAAC/B,WAAW,CAACkC,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAAC2F,mBAAmB,CAAC9C,IAAI,CAAC,CAAC;MACrJ,IAAI,CAACI,iBAAiB,GAAGrB,OAAO,CAAC+C,MAAM,CAAC1B,iBAAiB,CAAC4B,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MACrF,IAAI,CAACtB,aAAa,GAAGvB,OAAO,CAAC+C,MAAM,CAACxB,aAAa,CAAC0B,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MAC7E,IAAI,CAACmB,mBAAmB,GAAG,IAAI,CAACC,sBAAsB,EAAE;MACxD,IAAI,CAACD,mBAAmB,GAAG,IAAI,CAACE,uBAAuB,CAAC,IAAI,CAACnF,SAAS,CAAC;IACzE,CAAC,CACF,CAAC,KACD,IAAI,IAAI,CAACI,eAAe,EAC3B,IAAI,CAACf,cAAc,CAACyB,kBAAkB,CAAC,IAAI,CAACV,eAAe,CAACW,GAAG,EAAE,IAAI,CAACX,eAAe,CAACY,GAAG,CAAC,CACvF5D,SAAS,CACP6D,OAAO,IAAI;MACV,IAAI,CAAC8C,cAAc,GAAG9C,OAAO,CAAC+C,MAAM;MACpC,IAAI,CAACC,KAAK,GAAGhD,OAAO,CAAC+C,MAAM,CAAC5C,IAAI,CAAC8C,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACzC,IAAI,IAAIA,IAAI,CAAC/B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5F,IAAI,CAAC0G,iBAAiB,GAAGlD,OAAO,CAAC+C,MAAM,CAACI,cAAc,CAACF,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MAClF,IAAI,CAACO,yBAAyB,GAAGpD,OAAO,CAAC+C,MAAM,CAACM,oBAAoB,CAACJ,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MAChG,IAAI,CAACS,qCAAqC,GAAGtD,OAAO,CAAC+C,MAAM,CAACQ,yBAAyB,CAACN,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MACjH,IAAI,CAACW,qBAAqB,GAAGxD,OAAO,CAAC+C,MAAM,CAACU,mBAAmB,CAACR,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MAC3F,IAAI,CAACa,yBAAyB,GAAG1D,OAAO,CAAC+C,MAAM,CAAChC,WAAW,CAACkC,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAAC8C,qBAAqB,CAACD,IAAI,CAAC,CAAC;MACpJ,IAAI,CAAC0C,kBAAkB,GAAG,IAAI,CAACb,cAAc,CAACc,MAAM,CAACX,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MAChF,IAAI,CAACgB,kBAAkB,GAAG,IAAI,CAACf,cAAc,CAAC/B,WAAW,CAACkC,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAACgD,cAAc,CAACH,IAAI,CAAC,CAAC;MAC3I,IAAI,CAAC6C,uBAAuB,GAAG,IAAI,CAAChB,cAAc,CAAC/B,WAAW,CAACkC,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAAC2F,mBAAmB,CAAC9C,IAAI,CAAC,CAAC;MACrJ,IAAI,CAACI,iBAAiB,GAAGrB,OAAO,CAAC+C,MAAM,CAAC1B,iBAAiB,CAAC4B,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MACrF,IAAI,CAACtB,aAAa,GAAGvB,OAAO,CAAC+C,MAAM,CAACxB,aAAa,CAAC0B,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MAC7E,IAAI,CAACmB,mBAAmB,GAAG,IAAI,CAACC,sBAAsB,EAAE;MACxD,IAAI,CAACD,mBAAmB,GAAG,IAAI,CAACE,uBAAuB,CAAC,IAAI,CAACnF,SAAS,CAAC;IACzE,CAAC,CACF;EACP;EAGAkF,sBAAsB;IACpB,IAAIE,gBAAgB,GAAG,CAAC,CAAC;IACzB,IAAI,IAAI,CAAChF,eAAe,EACtBgF,gBAAgB,GAAG,IAAI,CAACnB,KAAK,CAACoB,SAAS,CAACC,IAAI,IAAIA,IAAI,KAAK,GAAG,IAAI,CAACpF,WAAW,KAAK,CAAC;IACpF,IAAIkF,gBAAgB,KAAK,CAAC,CAAC,EAAE;MAC3B,MAAMH,mBAAmB,GAAG;QAC1BK,IAAI,EAAE,IAAI,CAACrB,KAAK,CAACmB,gBAAgB,CAAC;QAClCG,WAAW,EAAE,IAAI,CAACpB,iBAAiB,CAACiB,gBAAgB,CAAC;QACrDI,mBAAmB,EAAE,IAAI,CAACnB,yBAAyB,CAACe,gBAAgB,CAAC;QACrEK,wBAAwB,EAAE,IAAI,CAAClB,qCAAqC,CAACa,gBAAgB,CAAC;QACtFM,QAAQ,EAAE,IAAI,CAACjB,qBAAqB,CAACW,gBAAgB,CAAC;QACtDO,WAAW,EAAE,IAAI,CAAChB,yBAAyB,CAACS,gBAAgB,CAAC;QAC7DQ,KAAK,EAAE,IAAI,CAAChB,kBAAkB,CAACQ,gBAAgB,CAAC;QAChDS,IAAI,EAAE,IAAI,CAACf,kBAAkB,CAACM,gBAAgB,CAAC;QAC/CU,SAAS,EAAE,IAAI,CAACf,uBAAuB,CAACK,gBAAgB,CAAC;QACzDW,aAAa,EAAE,IAAI,CAACzD,iBAAiB,CAAC8C,gBAAgB,CAAC;QACvDY,SAAS,EAAE,IAAI,CAACxD,aAAa,CAAC4C,gBAAgB;OAC/C;MACD,OAAOH,mBAAmB;KAC3B,MAAM;MACL,OAAO,IAAI;;EAEf;EAEAE,uBAAuB,CAACc,CAAS;IAC/B,MAAMhB,mBAAmB,GAAG;MAC1BK,IAAI,EAAE,IAAI,CAACrB,KAAK,CAACgC,CAAC,CAAC;MACnBV,WAAW,EAAE,IAAI,CAACpB,iBAAiB,CAAC8B,CAAC,CAAC;MACtCT,mBAAmB,EAAE,IAAI,CAACnB,yBAAyB,CAAC4B,CAAC,CAAC;MACtDR,wBAAwB,EAAE,IAAI,CAAClB,qCAAqC,CAAC0B,CAAC,CAAC;MACvEP,QAAQ,EAAE,IAAI,CAACjB,qBAAqB,CAACwB,CAAC,CAAC;MACvCN,WAAW,EAAE,IAAI,CAAChB,yBAAyB,CAACsB,CAAC,CAAC;MAC9CL,KAAK,EAAE,IAAI,CAAChB,kBAAkB,CAACqB,CAAC,CAAC;MACjCJ,IAAI,EAAE,IAAI,CAACf,kBAAkB,CAACmB,CAAC,CAAC;MAChCH,SAAS,EAAE,IAAI,CAACf,uBAAuB,CAACkB,CAAC,CAAC;MAC1CF,aAAa,EAAE,IAAI,CAACzD,iBAAiB,CAAC2D,CAAC,CAAC;MACxCD,SAAS,EAAE,IAAI,CAACxD,aAAa,CAACyD,CAAC;KAChC;IACD,OAAOhB,mBAAmB;EAC5B;EAEAiB,gBAAgB,CAACC,OAAe;IAC9B,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,KAAK,EAAE;MACxC,OAAO,MAAM;KACd,MAAM,IAAIA,OAAO,IAAI,KAAK,IAAIA,OAAO,GAAG,KAAK,EAAE;MAC9C,OAAO,eAAe;KACvB,MAAM,IAAIA,OAAO,IAAI,KAAK,IAAIA,OAAO,GAAG,KAAK,EAAE;MAC9C,OAAO,UAAU;KAClB,MAAM,IAAIA,OAAO,IAAI,KAAK,IAAIA,OAAO,GAAG,KAAK,EAAE;MAC9C,OAAO,cAAc;KACtB,MAAM,IAAIA,OAAO,IAAI,KAAK,IAAIA,OAAO,GAAG,MAAM,EAAE;MAC/C,OAAO,KAAK;KACb,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,aAAa;KACrB,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,SAAS;KACjB,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,aAAa;KACrB,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,KAAK;KACb,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,eAAe;KACvB,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,WAAW;KACnB,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,iBAAiB;KACzB,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,OAAO;KACf,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,kBAAkB;KAC1B,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,YAAY;KACpB,MAAM;MACL,OAAO,iBAAiB;;EAE5B;;AAxPW1C,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAA1J;EAAAsJ;IAAAjD;IAAAkD;IAAArC;IAAAyB;IAAAxB;IAAAqC;IAAAxB;IAAAK;IAAAf;IAAAE;IAAAE;IAAAE;IAAAE;IAAAS;IAAAE;EAAA;EAAAgB,WAAAA,kEAAAA;EAAAxJ;EAAAC;EAAA0C;EAAAzC;IAAA;MDZhCC,wDAAAA,yDA8EM;;;MA9EAA,wDAAAA,2BAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEIbA,uDAAAA,aAA8D;;;;;IAWlDA,uDAAAA,cACuB;;;;;IADYA,oEAAAA,oEAAAA,2DAAAA,CAAoD;;;;;IAEvFA,uDAAAA,cACuB;;;;;IADaA,oEAAAA,yEAAAA,2DAAAA,CAAyD;;;;;;;;;;;;;IARzGA,4DAAAA,cAA2D;IACzBA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,6BAAiB;IAAA,EAAC;IAGrDA,4DAAAA,cAAwC;IACpCA,oDAAAA,GAAW;IAAAA,uDAAAA,SAAI;IACfA,wDAAAA,wEACuB;IACvBA,wDAAAA,wEACuB;IAAAA,uDAAAA,SAAI;IAC3BA,oDAAAA,GACJ;IAAAA,0DAAAA,EAAM;;;;;;IATNA,uDAAAA,GAA6H;IAA7HA,wDAAAA,YAAAA,6DAAAA,qFAA6H;IAGzHA,uDAAAA,GAAW;IAAXA,gEAAAA,mBAAW;IACLA,uDAAAA,GAA2B;IAA3BA,wDAAAA,yCAA2B;IAE3BA,uDAAAA,GAA4B;IAA5BA,wDAAAA,0CAA4B;IAElCA,uDAAAA,GACJ;IADIA,gEAAAA,kDACJ;;;;;IAZZA,4DAAAA,aAAwC;IACpCA,wDAAAA,iEAaM;IACVA,0DAAAA,EAAM;;;;IAdgCA,uDAAAA,GAAU;IAAVA,wDAAAA,yBAAU;;;ACKlD,MAAOiM,uBAAuB;EA8BlClL,YAAoBmE,cAA8B,EAAUtC,aAA4B,EAAUwD,MAAc,EAAU8F,KAAqB,EAAUxG,QAAyB,EAAUW,cAA8B;IAAtM,mBAAc,GAAdnB,cAAc;IAA0B,kBAAa,GAAbtC,aAAa;IAAyB,WAAM,GAANwD,MAAM;IAAkB,UAAK,GAAL8F,KAAK;IAA0B,aAAQ,GAARxG,QAAQ;IAA2B,mBAAc,GAAdW,cAAc;IAvBnM,SAAI,GAAS,IAAIlB,IAAI,EAAE;IACvB,gBAAW,GAAWC,MAAM,CAAC,IAAI,CAACC,IAAI,CAACC,QAAQ,EAAE,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAuBnF,MAAMpE,GAAG,GAAGqE,MAAM,CAACC,QAAQ,CAACC,QAAQ;IACpC,MAAMC,QAAQ,GAAGxE,GAAG,CAACkC,KAAK,CAAC,GAAG,CAAC;IAC/B,IAAIsC,QAAQ,CAACrC,MAAM,KAAK,CAAC,EAAE;MACzB,IAAI,CAACsC,SAAS,GAAGT,MAAM,CAACQ,QAAQ,CAACA,QAAQ,CAACrC,MAAM,GAAG,CAAC,CAAC,CAAC;MACtD,IAAI,CAACuC,QAAQ,GAAGV,MAAM,CAACQ,QAAQ,CAACA,QAAQ,CAACrC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;KAC1D,MAAM,IAAIqC,QAAQ,CAACrC,MAAM,KAAK,CAAC,EAAE;MAChC,IAAI,CAACuC,QAAQ,GAAGV,MAAM,CAACQ,QAAQ,CAACA,QAAQ,CAACrC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;MACzD,IAAI,CAACsC,SAAS,GAAG,IAAI,CAACE,WAAW;;EAErC;EAEAjD,QAAQ;IACN,IAAI,CAACoJ,KAAK,CAACC,MAAM,CAAClJ,SAAS,CAACkJ,MAAM,IAAG;MACnC,IAAI,CAAC3C,iBAAiB,CAAC,IAAI,CAAC1D,QAAQ,CAAC;IACvC,CAAC,CAAC;IAEF,IAAI,CAAClD,aAAa,CAACI,QAAQ,EAAE,CAACC,SAAS,CAAEC,MAAM,IAAI;MACjD,IAAI,CAACoD,WAAW,GAAGpD,MAAM;MACzB,IAAI,CAACsG,iBAAiB,CAAC,IAAI,CAAC1D,QAAQ,CAAC;IACvC,CAAC,CAAC;EACJ;EAEAU,WAAW,CAACC,OAAsB;IAChC,IAAIA,OAAO,CAAC,iBAAiB,CAAC,IAAIA,OAAO,CAAC,iBAAiB,CAAC,CAACC,YAAY,EAAE;MACzE,IAAI,CAAC8C,iBAAiB,CAAC,IAAI,CAAC1D,QAAQ,CAAC;;IAEvC,IAAIW,OAAO,CAAC,WAAW,CAAC,IAAIA,OAAO,CAAC,WAAW,CAAC,CAACC,YAAY,EAAE;MAC7D,IAAI,CAAC8C,iBAAiB,CAAC,IAAI,CAAC1D,QAAQ,CAAC;;EAEzC;EAEAsG,mBAAmB;IACjB,IAAI,IAAI,CAACC,aAAa,IAAI,IAAI,CAACA,aAAa,CAACC,aAAa,EAAE;MAC1D,MAAMC,eAAe,GAAG,IAAI,CAACF,aAAa,CAACC,aAAa,CAACE,aAAa,CAAC,oBAAoB,CAAC;MAC5F,IAAID,eAAe,EAAE;QACnBA,eAAe,CAACE,cAAc,CAAC;UAAEC,QAAQ,EAAE,QAAQ;UAAEC,MAAM,EAAE;QAAO,CAAE,CAAC;;;EAG7E;EAEAC,oBAAoB;IAClB,IAAI,IAAI,CAACP,aAAa,IAAI,IAAI,CAACA,aAAa,CAACC,aAAa,EAAE;MAC1D,MAAMO,gBAAgB,GAAG,IAAI,CAACR,aAAa,CAACC,aAAa,CAACE,aAAa,CAAC,qBAAqB,CAAC;MAC9F,IAAIK,gBAAgB,EAAE;QACpBA,gBAAgB,CAACJ,cAAc,CAAC;UAAEC,QAAQ,EAAE,QAAQ;UAAEC,MAAM,EAAE;QAAO,CAAE,CAAC;;;EAG9E;EAEAG,UAAU;IACR,IAAI,IAAI,CAACT,aAAa,IAAI,IAAI,CAACA,aAAa,CAACC,aAAa,EAAE;MAC1D,MAAMS,WAAW,GAAG,IAAI,CAACV,aAAa,CAACC,aAAa,CAACE,aAAa,CAAC,gBAAgB,CAAC;MACpF,IAAIO,WAAW,EAAE;QACfA,WAAW,CAACN,cAAc,CAAC;UAAEC,QAAQ,EAAE,QAAQ;UAAEC,MAAM,EAAE;QAAO,CAAE,CAAC;;;EAGzE;EAEAK,aAAa,CAAC7B,IAAY;IACxB,IAAI8B,oBAAoB,GAAG,GAAG,IAAI,CAAClH,WAAW,KAAK;IACnD,IAAIoF,IAAI,KAAK,GAAG8B,oBAAoB,EAAE,EAAE;MACtC,OAAO,IAAI;KACZ,MAEC,OAAO,KAAK;EAChB;EAEAC,cAAc,CAAC/B,IAAY;IACzB,IAAI/F,MAAM,CAAC+F,IAAI,CAAC7H,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAACuC,SAAS,EAAE;MAChD,OAAO,IAAI;KACZ,MACI;MACH,OAAO,KAAK;;EAEhB;EAEA2D,iBAAiB,CAAC1D,QAAgB;IAChC,MAAM4D,UAAU,GAAG5D,QAAQ,GAAG,EAAE;IAChC,MAAM6D,QAAQ,GAAGD,UAAU,GAAG,EAAE;IAChC,IAAI,IAAI,CAACpD,WAAW,EAClB,IAAI,CAACpB,cAAc,CAACyB,kBAAkB,CAAC,IAAI,CAACL,WAAW,CAACM,GAAG,EAAE,IAAI,CAACN,WAAW,CAACO,GAAG,CAAC,CAC/E5D,SAAS,CACP6D,OAAO,IAAI;MACV,IAAI,CAAC8C,cAAc,GAAG9C,OAAO,CAAC+C,MAAM;MACpC,IAAI,CAACC,KAAK,GAAG,IAAI,CAACF,cAAc,CAAC3C,IAAI,CAAC8C,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACzC,IAAI,IAAIA,IAAI,CAAC/B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACjG,IAAI,CAAC0G,iBAAiB,GAAG,IAAI,CAACJ,cAAc,CAACK,cAAc,CAACF,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MACvF,IAAI,CAACO,yBAAyB,GAAG,IAAI,CAACN,cAAc,CAACO,oBAAoB,CAACJ,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MACrG,IAAI,CAACS,qCAAqC,GAAG,IAAI,CAACR,cAAc,CAACS,yBAAyB,CAACN,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MACtH,IAAI,CAACW,qBAAqB,GAAG,IAAI,CAACV,cAAc,CAACW,mBAAmB,CAACR,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MAChG,IAAI,CAACa,yBAAyB,GAAG,IAAI,CAACZ,cAAc,CAAC/B,WAAW,CAACkC,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAAC8C,qBAAqB,CAACD,IAAI,CAAC,CAAC;MACzJ,IAAI,CAAC0C,kBAAkB,GAAG,IAAI,CAACb,cAAc,CAACc,MAAM,CAACX,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MAChF,IAAI,CAACgB,kBAAkB,GAAG,IAAI,CAACf,cAAc,CAAC/B,WAAW,CAACkC,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAACgD,cAAc,CAACH,IAAI,CAAC,CAAC;MAC3I,IAAI,CAAC6C,uBAAuB,GAAG,IAAI,CAAChB,cAAc,CAAC/B,WAAW,CAACkC,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAAC2F,mBAAmB,CAAC9C,IAAI,CAAC,CAAC;MACrJ,IAAIjC,QAAQ,KAAK,CAAC,EAChBqH,UAAU,CAAC,MAAK;QACd,IAAI,CAACf,mBAAmB,EAAE;QAC1B,IAAI,IAAI,CAACvG,SAAS,KAAK,IAAI,CAACE,WAAW,EACrC,IAAI,CAAC6G,oBAAoB,EAAE;MAC/B,CAAC,EAAE,EAAE,CAAC;MACR,IAAI9G,QAAQ,KAAK,CAAC,EAChBqH,UAAU,CAAC,MAAK;QACd,IAAI,CAACL,UAAU,EAAE;QACjB,IAAI,IAAI,CAACjH,SAAS,KAAK,EAAE,EACvB,IAAI,CAAC+G,oBAAoB,EAAE;MAE/B,CAAC,EAAE,EAAE,CAAC;MACR,IAAI,CAACQ,oBAAoB,GAAG,IAAI,CAACpC,uBAAuB,CAAC,IAAI,CAACnF,SAAS,CAAC;IAC1E,CAAC,CACF,CAAC,KACD,IAAI,IAAI,CAACI,eAAe,EAC3B,IAAI,CAACf,cAAc,CAACyB,kBAAkB,CAAC,IAAI,CAACV,eAAe,CAACW,GAAG,EAAE,IAAI,CAACX,eAAe,CAACY,GAAG,CAAC,CACvF5D,SAAS,CACP6D,OAAO,IAAI;MACV,IAAI,CAAC8C,cAAc,GAAG9C,OAAO,CAAC+C,MAAM;MACpC,IAAI,CAACC,KAAK,GAAGhD,OAAO,CAAC+C,MAAM,CAAC5C,IAAI,CAAC8C,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACzC,IAAI,IAAIA,IAAI,CAAC/B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5F,IAAI,CAAC0G,iBAAiB,GAAGlD,OAAO,CAAC+C,MAAM,CAACI,cAAc,CAACF,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MAClF,IAAI,CAACO,yBAAyB,GAAGpD,OAAO,CAAC+C,MAAM,CAACM,oBAAoB,CAACJ,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MAChG,IAAI,CAACS,qCAAqC,GAAGtD,OAAO,CAAC+C,MAAM,CAACQ,yBAAyB,CAACN,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MACjH,IAAI,CAACW,qBAAqB,GAAGxD,OAAO,CAAC+C,MAAM,CAACU,mBAAmB,CAACR,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MAC3F,IAAI,CAACa,yBAAyB,GAAG1D,OAAO,CAAC+C,MAAM,CAAChC,WAAW,CAACkC,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAAC8C,qBAAqB,CAACD,IAAI,CAAC,CAAC;MACpJ,IAAI,CAAC0C,kBAAkB,GAAG,IAAI,CAACb,cAAc,CAACc,MAAM,CAACX,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;MAChF,IAAI,CAACgB,kBAAkB,GAAG,IAAI,CAACf,cAAc,CAAC/B,WAAW,CAACkC,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAACgD,cAAc,CAACH,IAAI,CAAC,CAAC;MAC3I,IAAI,CAAC6C,uBAAuB,GAAG,IAAI,CAAChB,cAAc,CAAC/B,WAAW,CAACkC,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAAC2F,mBAAmB,CAAC9C,IAAI,CAAC,CAAC;MACrJ,IAAIjC,QAAQ,KAAK,CAAC,EAChBqH,UAAU,CAAC,MAAK;QACd,IAAI,CAACf,mBAAmB,EAAE;QAC1B,IAAI,IAAI,CAACvG,SAAS,KAAK,IAAI,CAACE,WAAW,EACrC,IAAI,CAAC6G,oBAAoB,EAAE;MAC/B,CAAC,EAAE,EAAE,CAAC;MACR,IAAI9G,QAAQ,KAAK,CAAC,EAChBqH,UAAU,CAAC,MAAK;QACd,IAAI,CAACL,UAAU,EAAE;QACjB,IAAI,IAAI,CAACjH,SAAS,KAAK,EAAE,EACvB,IAAI,CAAC+G,oBAAoB,EAAE;MAC/B,CAAC,EAAE,EAAE,CAAC;MACR,IAAI,CAACQ,oBAAoB,GAAG,IAAI,CAACpC,uBAAuB,CAAC,IAAI,CAACnF,SAAS,CAAC;IAC1E,CAAC,CACF;EACP;EAEAmF,uBAAuB,CAACc,CAAS;IAC/B,MAAMhB,mBAAmB,GAAG;MAC1BK,IAAI,EAAE,IAAI,CAACrB,KAAK,CAACgC,CAAC,CAAC;MACnBV,WAAW,EAAE,IAAI,CAACpB,iBAAiB,CAAC8B,CAAC,CAAC;MACtCT,mBAAmB,EAAE,IAAI,CAACnB,yBAAyB,CAAC4B,CAAC,CAAC;MACtDR,wBAAwB,EAAE,IAAI,CAAClB,qCAAqC,CAAC0B,CAAC,CAAC;MACvEP,QAAQ,EAAE,IAAI,CAACjB,qBAAqB,CAACwB,CAAC,CAAC;MACvCN,WAAW,EAAE,IAAI,CAAChB,yBAAyB,CAACsB,CAAC,CAAC;MAC9CJ,IAAI,EAAE,IAAI,CAACf,kBAAkB,CAACmB,CAAC;KAChC;IACD,OAAOhB,mBAAmB;EAC5B;EAEAuC,cAAc,CAACvB,CAAS,EAAEwB,YAAoB,CAAC;IAC7C,MAAMC,UAAU,GAAG,IAAI,CAACnH,MAAM,CAAChF,GAAG;IAClC,MAAMwE,QAAQ,GAAG2H,UAAU,CAACjK,KAAK,CAAC,GAAG,CAAC;IAEtC,IAAIsC,QAAQ,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE;MAC9BA,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK;MACnBA,QAAQ,CAAC4H,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;;IAG5B,IAAI5H,QAAQ,CAACrC,MAAM,KAAK,CAAC,EAAE;MACzBqC,QAAQ,CAAC,CAAC,CAAC,GAAGkG,CAAC,CAACvG,QAAQ,EAAE;KAC3B,MAAM;MACLK,QAAQ,CAAC6H,IAAI,CAAC3B,CAAC,CAACvG,QAAQ,EAAE,CAAC;;IAG7B,MAAMmI,MAAM,GAAG9H,QAAQ,CAAC+H,IAAI,CAAC,GAAG,CAAC;IAEjC,IAAI,CAACtH,cAAc,CAACuH,cAAc,EAAE;IAEpC,IAAI,CAACxH,MAAM,CAACyH,aAAa,CAACH,MAAM,CAAC,CAACtO,IAAI,CAAC,MAAK;MAC1C,IAAIkO,SAAS,GAAG,CAAC,EAAE;QACjB,IAAI,CAACD,cAAc,CAACvB,CAAC,EAAEwB,SAAS,GAAG,CAAC,CAAC;;IAEzC,CAAC,CAAC;EACJ;;AAhNWrB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAArM;EAAAkO;IAAA;;;;;;;;;;;;;;;;;;;;;MDdpC9N,4DAAAA,aAAwC;MAC7BA,oDAAAA,oCAAwB;MAAAA,0DAAAA,EAAQ;MACvCA,4DAAAA,aAA6B;MAErBA,wDAAAA,2DAA8D;MAClEA,0DAAAA,EAAM;MAEVA,4DAAAA,gBAA2C;MACvCA,wDAAAA,2DAeM;MACVA,0DAAAA,EAAM;;;MApBoCA,uDAAAA,GAAoB;MAApBA,wDAAAA,kCAAoB;MAIpDA,uDAAAA,GAAoB;MAApBA,wDAAAA,4BAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEJtBA,4DAAAA,eAAkE;IAAAA,oDAAAA,GAElE;IAAAA,0DAAAA,EAAO;;;;IAF2DA,uDAAAA,GAElE;IAFkEA,gEAAAA,4FAElE;;;;;IACAA,4DAAAA,cAAwD;IAAAA,oDAAAA,GACxD;IAAAA,0DAAAA,EAAM;;;;IADkDA,uDAAAA,GACxD;IADwDA,gEAAAA,wCACxD;;;;;IACAA,4DAAAA,UAAkC;IAC9BA,oDAAAA,GAEJ;IAAAA,0DAAAA,EAAM;;;;IAFFA,uDAAAA,GAEJ;IAFIA,gEAAAA,mGAEJ;;;;;IACAA,4DAAAA,cAA+C;IAC3CA,oDAAAA,GAAsC;IAAAA,0DAAAA,EAAM;;;;IAA5CA,uDAAAA,GAAsC;IAAtCA,gEAAAA,yDAAsC;;;;;IAC1CA,4DAAAA,UAAkC;IAACA,oDAAAA,GACe;IAAAA,0DAAAA,EAAM;;;;IADrBA,uDAAAA,GACe;IADfA,gEAAAA,2EACe;;;;;IAG1CA,uDAAAA,cACgG;;;;IAA5FA,oEAAAA,uFAAAA,2DAAAA,CAAwE;;;;;IAC5EA,uDAAAA,cAEuB;;;;IADnBA,oEAAAA,6FAAAA,2DAAAA,CAA6E;;;;;IALzFA,4DAAAA,cAA8D;IAEtDA,wDAAAA,qEACgG;IAChGA,wDAAAA,qEAEuB;IACvBA,oDAAAA,GACJ;IAAAA,0DAAAA,EAAK;IACLA,oDAAAA,GACJ;IAAAA,0DAAAA,EAAM;;;;IARQA,uDAAAA,GAA6D;IAA7DA,wDAAAA,+EAA6D;IAE7DA,uDAAAA,GAA8D;IAA9DA,wDAAAA,gFAA8D;IAGpEA,uDAAAA,GACJ;IADIA,gEAAAA,mDACJ;IACAA,uDAAAA,GACJ;IADIA,gEAAAA,qFACJ;;;;;IAyBYA,4DAAAA,cAAqD;IACjDA,uDAAAA,YAAmC;IAACA,oDAAAA,GACxC;IAAAA,0DAAAA,EAAM;;;;IADkCA,uDAAAA,GACxC;IADwCA,gEAAAA,6DACxC;;;;;;;;;;IAaIA,uDAAAA,YAC2F;;;;IAAvFA,wDAAAA,YAAAA,6DAAAA,0EAAkF;;;;;IACtFA,uDAAAA,YAC2F;;;;IAAvFA,wDAAAA,YAAAA,6DAAAA,0EAAkF;;;;;IAZ9FA,4DAAAA,cAAuD;IACtBA,oDAAAA,aAAM;IAAAA,0DAAAA,EAAM;IAEzCA,4DAAAA,cAAwB;IAAAA,uDAAAA,YAAgC;IAACA,oDAAAA,qBAAa;IAAAA,uDAAAA,aAAuB;IAAAA,oDAAAA,GAG7F;IAAAA,0DAAAA,EAAM;IACNA,4DAAAA,cAA4B;IACxBA,uDAAAA,YAAqC;IAACA,oDAAAA,uBACtC;IAAAA,wDAAAA,oEAC2F;IAC3FA,wDAAAA,oEAC2F;IAC3FA,uDAAAA,cAAyB;IACzBA,4DAAAA,YAAM;IACFA,oDAAAA,IACJ;IAAAA,0DAAAA,EAAO;;;;IAbkFA,uDAAAA,GAG7F;IAH6FA,gEAAAA,qDAG7F;IAGwCA,uDAAAA,GAAyC;IAAzCA,wDAAAA,oDAAyC;IAEzCA,uDAAAA,GAAyC;IAAzCA,wDAAAA,oDAAyC;IAIzEA,uDAAAA,GACJ;IADIA,gEAAAA,8EACJ;;;;;IA1E5BA,4DAAAA,aAA6C;IAErCA,uDAAAA,aAAuE;IACvEA,4DAAAA,aAAwB;IACpBA,wDAAAA,gEAEO;IACPA,wDAAAA,8DACM;IACNA,wDAAAA,8DAGM;IACNA,wDAAAA,8DACgD;IAChDA,wDAAAA,8DACwD;IACxDA,wDAAAA,8DAUM;IACVA,0DAAAA,EAAM;IAEVA,4DAAAA,cAAwB;IAKoBA,oDAAAA,kBAAU;IAAAA,0DAAAA,EAAM;IACxCA,4DAAAA,eAAwB;IAAAA,oDAAAA,IAAqC;IAAAA,0DAAAA,EAAM;IAG3EA,4DAAAA,eAAiB;IAEeA,oDAAAA,kBAAU;IAAAA,0DAAAA,EAAM;IACxCA,4DAAAA,eAAwB;IAAAA,oDAAAA,IAAqC;IAAAA,0DAAAA,EAAM;IAI/EA,uDAAAA,UAAI;IACJA,4DAAAA,eAAiB;IAGmBA,oDAAAA,uBAAU;IAAAA,0DAAAA,EAAM;IACxCA,uDAAAA,eAAoC;IACpCA,wDAAAA,iEAEM;IACVA,0DAAAA,EAAM;IAEVA,4DAAAA,eAAiB;IACbA,wDAAAA,kEAkBM;IACVA,0DAAAA,EAAM;;;;IAzEAA,uDAAAA,GAAqC;IAArCA,wDAAAA,uDAAqC;IAGtCA,uDAAAA,GAA4B;IAA5BA,wDAAAA,uCAA4B;IAE/BA,uDAAAA,GAA0B;IAA1BA,wDAAAA,qCAA0B;IAI1BA,uDAAAA,GAA0B;IAA1BA,wDAAAA,qCAA0B;IAE1BA,uDAAAA,GAA0B;IAA1BA,wDAAAA,qCAA0B;IAE1BA,uDAAAA,GAA0B;IAA1BA,wDAAAA,qCAA0B;IAmBIA,uDAAAA,GAAqC;IAArCA,gEAAAA,4DAAqC;IAMrCA,uDAAAA,GAAqC;IAArCA,gEAAAA,4DAAqC;IAUvDA,uDAAAA,GAA0B;IAA1BA,wDAAAA,qCAA0B;IAM9BA,uDAAAA,GAA0B;IAA1BA,wDAAAA,qCAA0B;;;AC9C9C,MAAO+N,oBAAoB;EA4C/BhN,YAAoBmE,cAA8B,EAAUtC,aAA4B,EAAUyD,cAA8B;IAA5G,mBAAc,GAAdnB,cAAc;IAA0B,kBAAa,GAAbtC,aAAa;IAAyB,mBAAc,GAAdyD,cAAc;IAzBzG,SAAI,GAAS,IAAIlB,IAAI,EAAE;IACvB,gBAAW,GAAWC,MAAM,CAAC,IAAI,CAACC,IAAI,CAACC,QAAQ,EAAE,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAyBnF,IAAI,CAAC+D,SAAS,EAAE;EAClB;EAEAA,SAAS;IACP,MAAMnI,GAAG,GAAGqE,MAAM,CAACC,QAAQ,CAACC,QAAQ;IACpC,MAAMC,QAAQ,GAAGxE,GAAG,CAACkC,KAAK,CAAC,GAAG,CAAC;IAC/B,IAAIsC,QAAQ,CAACrC,MAAM,KAAK,CAAC,EAAE;MACzB,IAAI,CAACsC,SAAS,GAAGT,MAAM,CAACQ,QAAQ,CAACA,QAAQ,CAACrC,MAAM,GAAG,CAAC,CAAC,CAAC;MACtD,IAAI,CAACuC,QAAQ,GAAGV,MAAM,CAACQ,QAAQ,CAACA,QAAQ,CAACrC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;KAC1D,MAAM,IAAIqC,QAAQ,CAACrC,MAAM,KAAK,CAAC,EAAE;MAChC,IAAI,CAACuC,QAAQ,GAAGV,MAAM,CAACQ,QAAQ,CAACA,QAAQ,CAACrC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;MACzD,IAAI,CAACsC,SAAS,GAAG,IAAI,CAACE,WAAW;;EAErC;EAGAjD,QAAQ;IACN,IAAI,CAACF,aAAa,CAACI,QAAQ,EAAE,CAACC,SAAS,CAAEC,MAAM,IAAI;MACjD,IAAI,CAACoD,WAAW,GAAGpD,MAAM;MACzB,IAAI,IAAI,CAACoD,WAAW,EAClB,IAAI,CAAC0H,sBAAsB,GAAG,IAAI,CAAC1H,WAAW,CAACjD,YAAY,CAACC,KAAK,CAAC,GAAG,CAAC,CACnEwE,GAAG,CAAEmG,IAAY,IAAKA,IAAI,CAACC,IAAI,EAAE,CAAC,CAClCC,MAAM,CAAC,CAACC,CAAM,EAAEC,KAAa,EAAEC,KAAqB,KAAKD,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAKC,KAAK,CAAC/K,MAAM,GAAG,CAAC,IAAI8K,KAAK,KAAKC,KAAK,CAAC/K,MAAM,GAAG,CAAC,CAAC,CAChJoK,IAAI,CAAC,IAAI,CAAC;MAEf,IAAI,CAACpH,gBAAgB,EAAE;MACvB,IAAI,CAACiD,iBAAiB,CAAC,IAAI,CAAC1D,QAAQ,CAAC;IACvC,CAAC,CAAC;IACF,IAAI,CAACO,cAAc,CAACoD,oBAAoB,EAAE,CAACxG,SAAS,CAAC,MAAK;MACxD,IAAI,CAACsG,SAAS,EAAE;MAChB,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAAC1D,QAAQ,CAAC;IACvC,CAAC,CAAC;EACJ;EAEAU,WAAW,CAACC,OAAsB;IAChC,IAAIA,OAAO,CAAC,iBAAiB,CAAC,IAAIA,OAAO,CAAC,WAAW,CAAC,EAAE;MACtD,IAAI,CAAC8C,SAAS,EAAE;MAChB,IAAI,CAAChD,gBAAgB,EAAE;MACvB,IAAI,CAACiD,iBAAiB,CAAC,IAAI,CAAC1D,QAAQ,CAAC;;EAEzC;EAGA0C,UAAU,CAACnD,IAAY;IACrB,MAAMoD,QAAQ,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC;IAC1F,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;IAExI,MAAMC,OAAO,GAAG,IAAIxD,IAAI,CAACE,IAAI,CAAC;IAC9B,MAAMuD,SAAS,GAAGH,QAAQ,CAACE,OAAO,CAACE,MAAM,EAAE,CAAC;IAC5C,MAAMC,UAAU,GAAGH,OAAO,CAACI,OAAO,EAAE;IACpC,MAAMC,KAAK,GAAGN,MAAM,CAACC,OAAO,CAACM,QAAQ,EAAE,CAAC;IAExC,OAAO,GAAGL,SAAS,IAAIE,UAAU,IAAIE,KAAK,EAAE;EAC9C;EAEAzC,gBAAgB;IACd,IAAI,IAAI,CAACD,WAAW,EAClB,IAAI,CAACpB,cAAc,CAACyB,kBAAkB,CAAC,IAAI,CAACL,WAAW,CAACM,GAAG,EAAE,IAAI,CAACN,WAAW,CAACO,GAAG,CAAC,CAC/E5D,SAAS,CACP6D,OAAO,IAAI;MACV,IAAI,CAACC,KAAK,GAAGD,OAAO,CAACE,KAAK,CAACC,IAAI;MAC/B,IAAI,CAACC,mBAAmB,GAAGJ,OAAO,CAACE,KAAK,CAACG,kBAAkB;MAC3D,IAAI,CAACC,mBAAmB,GAAGN,OAAO,CAACE,KAAK,CAACK,kBAAkB;MAC3D,IAAI,CAACC,2BAA2B,GAAGR,OAAO,CAACE,KAAK,CAACO,wBAAwB;MACzE,IAAI,CAACC,2BAA2B,GAAGV,OAAO,CAACE,KAAK,CAACS,wBAAwB;MACzE,IAAI,CAACC,wCAAwC,GAAGZ,OAAO,CAACE,KAAK,CAACW,8BAA8B;MAC5F,IAAI,CAACC,wBAAwB,GAAGd,OAAO,CAACE,KAAK,CAACa,WAAW,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAAC8C,qBAAqB,CAACD,IAAI,CAAC,CAAC;MACtH,IAAI,CAACE,iBAAiB,GAAGnB,OAAO,CAACE,KAAK,CAACa,WAAW,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAACgD,cAAc,CAACH,IAAI,CAAC,CAAC;MACxG,IAAI,CAACI,iBAAiB,GAAGrB,OAAO,CAACE,KAAK,CAACoB,0BAA0B;MACjE,IAAI,CAACC,aAAa,GAAGvB,OAAO,CAACE,KAAK,CAACsB,iBAAiB;MACpD,OAAO,IAAI,CAACC,aAAa,GAAGzB,OAAO,CAACE,KAAK;IAC3C,CAAC,CACF,CAAC,KACD,IAAI,IAAI,CAACf,eAAe,EAC3B,IAAI,CAACf,cAAc,CAACyB,kBAAkB,CAAC,IAAI,CAACV,eAAe,CAACW,GAAG,EAAE,IAAI,CAACX,eAAe,CAACY,GAAG,CAAC,CACvF5D,SAAS,CACP6D,OAAO,IAAI;MACV,IAAI,CAACC,KAAK,GAAGD,OAAO,CAACE,KAAK,CAACC,IAAI;MAC/B,IAAI,CAACC,mBAAmB,GAAGJ,OAAO,CAACE,KAAK,CAACG,kBAAkB;MAC3D,IAAI,CAACC,mBAAmB,GAAGN,OAAO,CAACE,KAAK,CAACK,kBAAkB;MAC3D,IAAI,CAACC,2BAA2B,GAAGR,OAAO,CAACE,KAAK,CAACO,wBAAwB;MACzE,IAAI,CAACC,2BAA2B,GAAGV,OAAO,CAACE,KAAK,CAACS,wBAAwB;MACzE,IAAI,CAACC,wCAAwC,GAAGZ,OAAO,CAACE,KAAK,CAACW,8BAA8B;MAC5F,IAAI,CAACC,wBAAwB,GAAGd,OAAO,CAACE,KAAK,CAACa,WAAW,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAAC8C,qBAAqB,CAACD,IAAI,CAAC,CAAC;MACtH,IAAI,CAACE,iBAAiB,GAAGnB,OAAO,CAACE,KAAK,CAACa,WAAW,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAACgD,cAAc,CAACH,IAAI,CAAC,CAAC;MACxG,IAAI,CAACI,iBAAiB,GAAGrB,OAAO,CAACE,KAAK,CAACoB,0BAA0B;MACjE,IAAI,CAACC,aAAa,GAAGvB,OAAO,CAACE,KAAK,CAACsB,iBAAiB;MACpD,OAAO,IAAI,CAACC,aAAa,GAAGzB,OAAO,CAACE,KAAK;IAC3C,CAAC,CACF;EACP;EAEAwC,iBAAiB,CAAC1D,QAAgB;IAChC,MAAM4D,UAAU,GAAG5D,QAAQ,GAAG,EAAE;IAChC,MAAM6D,QAAQ,GAAGD,UAAU,GAAG,EAAE;IAChC,IAAI,IAAI,CAACpD,WAAW,EAAE;MACpB,IAAI,CAACpB,cAAc,CAACyB,kBAAkB,CAAC,IAAI,CAACL,WAAW,CAACM,GAAG,EAAE,IAAI,CAACN,WAAW,CAACO,GAAG,CAAC,CAC/E5D,SAAS,CACP6D,OAAO,IAAI;QACV,IAAI,CAAC8C,cAAc,GAAG9C,OAAO,CAAC+C,MAAM;QACpC,IAAI,CAACC,KAAK,GAAGhD,OAAO,CAAC+C,MAAM,CAAC5C,IAAI,CAAC8C,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACzC,IAAI,IAAIA,IAAI,CAAC/B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5F,IAAI,CAAC0G,iBAAiB,GAAGlD,OAAO,CAAC+C,MAAM,CAACI,cAAc,CAACF,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;QAClF,IAAI,CAACO,yBAAyB,GAAGpD,OAAO,CAAC+C,MAAM,CAACM,oBAAoB,CAACJ,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;QAChG,IAAI,CAACS,qCAAqC,GAAGtD,OAAO,CAAC+C,MAAM,CAACQ,yBAAyB,CAACN,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;QACjH,IAAI,CAACW,qBAAqB,GAAGxD,OAAO,CAAC+C,MAAM,CAACU,mBAAmB,CAACR,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;QAC3F,IAAI,CAACa,yBAAyB,GAAG1D,OAAO,CAAC+C,MAAM,CAAChC,WAAW,CAACkC,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAAC8C,qBAAqB,CAACD,IAAI,CAAC,CAAC;QACpJ,IAAI,CAAC0C,kBAAkB,GAAG,IAAI,CAACb,cAAc,CAACc,MAAM,CAACX,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;QAChF,IAAI,CAACgB,kBAAkB,GAAG,IAAI,CAACf,cAAc,CAAC/B,WAAW,CAACkC,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAACgD,cAAc,CAACH,IAAI,CAAC,CAAC;QAC3I,IAAI,CAAC6C,uBAAuB,GAAG,IAAI,CAAChB,cAAc,CAAC/B,WAAW,CAACkC,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAAC2F,mBAAmB,CAAC9C,IAAI,CAAC,CAAC;QACrJ,IAAI,CAACI,iBAAiB,GAAGrB,OAAO,CAAC+C,MAAM,CAAC1B,iBAAiB,CAAC4B,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;QACrF,IAAI,CAACtB,aAAa,GAAGvB,OAAO,CAAC+C,MAAM,CAACxB,aAAa,CAAC0B,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;QAE7E,IAAI,CAACyD,oBAAoB,GAAG,IAAI,CAACpC,uBAAuB,CAAC,IAAI,CAACnF,SAAS,CAAC;MAC1E,CAAC,CACF;KACJ,MAAM,IAAI,IAAI,CAACI,eAAe,EAAE;MAC/B,IAAI,CAACf,cAAc,CAACyB,kBAAkB,CAAC,IAAI,CAACV,eAAe,CAACW,GAAG,EAAE,IAAI,CAACX,eAAe,CAACY,GAAG,CAAC,CACvF5D,SAAS,CACP6D,OAAO,IAAI;QACV,IAAI,CAAC8C,cAAc,GAAG9C,OAAO,CAAC+C,MAAM;QACpC,IAAI,CAACC,KAAK,GAAGhD,OAAO,CAAC+C,MAAM,CAAC5C,IAAI,CAAC8C,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACzC,IAAI,IAAIA,IAAI,CAAC/B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5F,IAAI,CAAC0G,iBAAiB,GAAGlD,OAAO,CAAC+C,MAAM,CAACI,cAAc,CAACF,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;QAClF,IAAI,CAACO,yBAAyB,GAAGpD,OAAO,CAAC+C,MAAM,CAACM,oBAAoB,CAACJ,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;QAChG,IAAI,CAACS,qCAAqC,GAAGtD,OAAO,CAAC+C,MAAM,CAACQ,yBAAyB,CAACN,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;QACjH,IAAI,CAACW,qBAAqB,GAAGxD,OAAO,CAAC+C,MAAM,CAACU,mBAAmB,CAACR,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;QAC3F,IAAI,CAACa,yBAAyB,GAAG1D,OAAO,CAAC+C,MAAM,CAAChC,WAAW,CAACkC,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAAC8C,qBAAqB,CAACD,IAAI,CAAC,CAAC;QACpJ,IAAI,CAAC0C,kBAAkB,GAAG,IAAI,CAACb,cAAc,CAACc,MAAM,CAACX,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;QAChF,IAAI,CAACgB,kBAAkB,GAAG,IAAI,CAACf,cAAc,CAAC/B,WAAW,CAACkC,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAACgD,cAAc,CAACH,IAAI,CAAC,CAAC;QAC3I,IAAI,CAAC6C,uBAAuB,GAAG,IAAI,CAAChB,cAAc,CAAC/B,WAAW,CAACkC,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC,CAAC7B,GAAG,CAACC,IAAI,IAAI,IAAI,CAAC7C,cAAc,CAAC2F,mBAAmB,CAAC9C,IAAI,CAAC,CAAC;QACrJ,IAAI,CAACI,iBAAiB,GAAGrB,OAAO,CAAC+C,MAAM,CAAC1B,iBAAiB,CAAC4B,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;QACrF,IAAI,CAACtB,aAAa,GAAGvB,OAAO,CAAC+C,MAAM,CAACxB,aAAa,CAAC0B,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;QAE7E,IAAI,CAACyD,oBAAoB,GAAG,IAAI,CAACpC,uBAAuB,CAAC,IAAI,CAACnF,SAAS,CAAC;MAC1E,CAAC,CACF;;EAEP;EAGAmF,uBAAuB,CAACc,CAAS;IAC/B,MAAMsB,oBAAoB,GAAG;MAC3BjC,IAAI,EAAE,IAAI,CAACrB,KAAK,CAACgC,CAAC,CAAC;MACnBV,WAAW,EAAE,IAAI,CAACpB,iBAAiB,CAAC8B,CAAC,CAAC;MACtCT,mBAAmB,EAAE,IAAI,CAACnB,yBAAyB,CAAC4B,CAAC,CAAC;MACtDR,wBAAwB,EAAE,IAAI,CAAClB,qCAAqC,CAAC0B,CAAC,CAAC;MACvEP,QAAQ,EAAE,IAAI,CAACjB,qBAAqB,CAACwB,CAAC,CAAC;MACvCN,WAAW,EAAE,IAAI,CAAChB,yBAAyB,CAACsB,CAAC,CAAC;MAC9CL,KAAK,EAAE,IAAI,CAAChB,kBAAkB,CAACqB,CAAC,CAAC;MACjCJ,IAAI,EAAE,IAAI,CAACf,kBAAkB,CAACmB,CAAC,CAAC;MAChCH,SAAS,EAAE,IAAI,CAACf,uBAAuB,CAACkB,CAAC,CAAC;MAC1CF,aAAa,EAAE,IAAI,CAACzD,iBAAiB,CAAC2D,CAAC,CAAC;MACxCD,SAAS,EAAE,IAAI,CAACxD,aAAa,CAACyD,CAAC;KAChC;IACD,OAAOsB,oBAAoB;EAC7B;EAEArB,gBAAgB,CAACC,OAAe;IAC9B,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,KAAK,EAAE;MACxC,OAAO,MAAM;KACd,MAAM,IAAIA,OAAO,IAAI,KAAK,IAAIA,OAAO,GAAG,KAAK,EAAE;MAC9C,OAAO,eAAe;KACvB,MAAM,IAAIA,OAAO,IAAI,KAAK,IAAIA,OAAO,GAAG,KAAK,EAAE;MAC9C,OAAO,UAAU;KAClB,MAAM,IAAIA,OAAO,IAAI,KAAK,IAAIA,OAAO,GAAG,KAAK,EAAE;MAC9C,OAAO,cAAc;KACtB,MAAM,IAAIA,OAAO,IAAI,KAAK,IAAIA,OAAO,GAAG,MAAM,EAAE;MAC/C,OAAO,KAAK;KACb,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,aAAa;KACrB,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,SAAS;KACjB,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,aAAa;KACrB,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,KAAK;KACb,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,eAAe;KACvB,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,WAAW;KACnB,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,iBAAiB;KACzB,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,OAAO;KACf,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,kBAAkB;KAC1B,MAAM,IAAIA,OAAO,IAAI,MAAM,IAAIA,OAAO,GAAG,MAAM,EAAE;MAChD,OAAO,YAAY;KACpB,MAAM;MACL,OAAO,iBAAiB;;EAE5B;;AA3OW+B,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAnO;EAAAsJ;IAAAjD;IAAAkD;IAAArC;IAAAyB;IAAAxB;IAAAqC;IAAAxB;IAAAK;IAAAf;IAAAE;IAAAE;IAAAE;IAAAE;IAAAS;IAAAE;EAAA;EAAAgB,WAAAA,kEAAAA;EAAAxJ;EAAAC;EAAA0C;EAAAzC;IAAA;MDZjCC,wDAAAA,0DAiFM;;;MAjFAA,wDAAAA,2BAAmB;;;;;;;;;;;;;;;;;;;;;;;;AECsB;AAC2B;AACG;AACS;;AAehF,MAAOuO,mBAAmB;AAAnBA,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA;AAAmB;AAAnBA,mBAAmB;YAPpBhM,yDAAY;AAAA;;sHAOXgM,mBAAmB;IAAA1N,eAX5ByI,mFAAmB,EACnByE,sFAAoB,EACpB9B,+FAAuB;IAAAxM,UAEf8C,yDAAY;IAAA7C,UAEpB4J,mFAAmB,EACnByE,sFAAoB,EACpB9B,+FAAuB;EAAA;AAAA;;;;;;;;;;;;;;;;;ACf4B;AACU;;;AAGjE,MAAMlN,MAAM,GAAW,CACnB;EACIC,IAAI,EAAE,UAAU;EAChBE,UAAU,EAAE;CACf,EACD;EACIF,IAAI,EAAE,KAAK;EACXwP,QAAQ,EAAEC,KAAK,CAACC,IAAI,CAAC;IAAEnL,MAAM,EAAE;EAAC,CAAE,EAAE,CAAC6K,CAAC,EAAEtI,QAAQ,KAAI;IAChD,MAAM6I,WAAW,GAAGF,KAAK,CAACC,IAAI,CAAC;MAAEnL,MAAM,EAAE;IAAE,CAAE,EAAE,CAAC6K,CAAC,EAAEvI,SAAS,KAAI;MAC5D,OAAO;QACH7G,IAAI,EAAE,GAAG6G,SAAS,EAAE;QACpBxD,SAAS,EAAE2C,0EAAgBA;OAC9B;IACL,CAAC,CAAC;IAEF,OAAO;MACHhG,IAAI,EAAE,GAAG8G,QAAQ,GAAG,CAAC,EAAE;MACvBzD,SAAS,EAAE2C,0EAAgB;MAC3BwJ,QAAQ,EAAEG;KACb;EACL,CAAC;CACJ,CACJ;AAYK,MAAOC,iBAAiB;AAAjBA,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA;AAAiB;AAAjBA,iBAAiB;YAHhB9P,kEAAqB,CAACC,MAAM,CAAC,EAC7BD,yDAAY;AAAA;;sHAEb8P,iBAAiB;IAAAnP,UAAAA,yDAAAA;IAAAC,UAFhBZ,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCqB;AACkB;AACgC;AACH;AACW;AACI;AACpD;AACC;AACE;AACwB;AACvB;;AAYvD,MAAOoB,UAAU;AAAVA,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;QAAVA;AAAU;AAAVA,UAAU;aAHV,CAAC2O,qEAAc,CAAC;EAAApP,UADjB8C,0DAAY,EAAEgM,0GAAmB,EAAEpI,uGAAkB,EAAEyI,mEAAiB,EAAErP,iEAAgB,EAAEwF,oEAAY;AAAA;;uHAIvG7E,UAAU;IAAAW,eANnBmE,0EAAgB;IAAAvF,UAER8C,0DAAY,EAAEgM,0GAAmB,EAAEpI,uGAAkB,EAAEyI,mEAAiB,EAAErP,iEAAgB,EAAEwF,oEAAY;IAAArF,UAExG4J,sHAAmB,EAAEpD,kHAAkB,EAAElB,0EAAgB,EAAEtC,4FAAkB;EAAA;AAAA;;;;;;;;;;;;;;;;;ACnBvD;;;AAM5B,MAAOqM,qBAAqB;EAChChO,YAAoBiO,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExChL,sBAAsB,CAACiL,CAAS;IAC9B,MAAM7N,GAAG,GAAG,sCAAsC6N,CAAC,gBAAgB;IACnE,MAAMC,SAAS,GAAG,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa/N,GAAG,CAAC;IAChD,OAAO,IAAI0N,4CAAU,CAAEM,QAAQ,IAAI;MACjCF,SAAS,CAACjM,SAAS,CAChByC,QAAQ,IAAI;QACX0J,QAAQ,CAAClO,IAAI,CAACwE,QAAQ,CAAC;QACvB0J,QAAQ,CAACC,QAAQ,EAAE;MACrB,CAAC,CAAC;IACN,CAAC,CAAC;IAEF,OAAOH,SAAS;EAClB;;AAfWH,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAAnN,SAArBmN,qBAAqB;EAAAO,YAFpB;AAAM;;;;;;;;;;;;;;;;;ACJ0B;;;AAOxC,MAAOC,sBAAsB;EACjCxO,YAAoBiO,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExChJ,6BAA6B;IAC3B,OAAO,IAAI8I,4CAAU,CAAEM,QAAQ,IAAI;MACjC,IAAII,SAAS,CAACC,WAAW,EAAE;QACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAI;UACX,MAAM/I,GAAG,GAAW+I,QAAQ,CAACC,MAAM,CAACC,QAAQ;UAC5C,MAAMhJ,GAAG,GAAW8I,QAAQ,CAACC,MAAM,CAACE,SAAS;UAC7C,IAAI,CAACC,kBAAkB,CAACnJ,GAAG,EAAEC,GAAG,CAAC,CAAC5D,SAAS,CACxCyC,QAAQ,IAAI;YACX0J,QAAQ,CAAClO,IAAI,CAACwE,QAAQ,CAAC;YACvB0J,QAAQ,CAACC,QAAQ,EAAE;UACrB,CAAC,CACF;QACH,CAAC,EACArN,KAAK,IAAI;UACRoN,QAAQ,CAACpN,KAAK,CACZ,iDAAiD,GAAGA,KAAK,CAACE,OAAO,CAClE;QACH,CAAC,CACF;OACF,MAAM;QACLkN,QAAQ,CAACpN,KAAK,CACZ,iEAAiE,CAClE;;IAEL,CAAC,CAAC;EACJ;EAEA+N,kBAAkB,CAACnJ,GAAW,EAAEC,GAAW;IACzC,MAAMzF,GAAG,GAAG,qCAAqCwF,GAAG,QAAQC,GAAG,cAAc;IAC7E,OAAO,IAAI,CAACmI,IAAI,CAACG,GAAG,CAAW/N,GAAG,CAAC;EACrC;;AAlCWmO,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;SAAtBA,sBAAsB;EAAA3N,SAAtB2N,sBAAsB;EAAAD,YAFrB;AAAM;;;;;;;;;;;;;;;;;;ACDd,MAAOU,kBAAkB;EAE7BjP,YAAoBiO,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCxL,aAAa,CAACyL,CAAS;IACrB,MAAM7N,GAAG,GAAG,iDAAiD6N,CAAC,yDAAyD;IACvH,OAAO,IAAI,CAACD,IAAI,CAACG,GAAG,CAAC/N,GAAG,CAAC;EAC3B;;AAPW4O,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAApO,SAAlBoO,kBAAkB;EAAAV,YAFjB;AAAM;;;;;;;;;;;;;;;;ACH4B;;AAK1C,MAAOY,aAAa;EAGxBnP;IAFQ,WAAM,GAAG,IAAIkP,iDAAe,CAAM,IAAI,CAAC;EAE/B;EAEhB1L,QAAQ,CAACrB,MAAW;IAClB,IAAI,CAACiN,MAAM,CAACjP,IAAI,CAACgC,MAAM,CAAC,CAAC,CAAC;EAC5B;;EAEAF,QAAQ;IACN,OAAO,IAAI,CAACmN,MAAM,CAACC,YAAY,EAAE,CAAC,CAAC;EACrC;;;AAXWF,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAtO,SAAbsO,aAAa;EAAAZ,YAFZ;AAAM;;;;;;;;;;;;;;;;ACHmB;;AAKjC,MAAOT,cAAc;EAH3B9N;IAIU,mBAAc,GAAG,IAAIkP,iDAAe,CAAYI,SAAS,CAAC,CAAC,CAAC;;;EAEpEzC,cAAc;IACZ,IAAI,CAAC0C,cAAc,CAACpP,IAAI,CAACmP,SAAS,CAAC;EACrC;EAEA5G,oBAAoB;IAClB,OAAO,IAAI,CAAC6G,cAAc,CAACF,YAAY,EAAE;EAC3C;;AATWvB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAjN,SAAdiN,cAAc;EAAAS,YAFb;AAAM;;;;;;;;;;;;;;;;;;ACId,MAAOiB,cAAc;EAEzBxP,YAAoBiO,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAQhB,wBAAmB,GAA8B;MACvD,CAAC,EAAE,aAAa;MAChB,CAAC,EAAE,uBAAuB;MAC1B,CAAC,EAAE,uBAAuB;MAC1B,CAAC,EAAE,SAAS;MACZ,EAAE,EAAE,qBAAqB;MACzB,EAAE,EAAE,qBAAqB;MACzB,EAAE,EAAE,eAAe;MACnB,EAAE,EAAE,gBAAgB;MACpB,EAAE,EAAE,cAAc;MAClB,EAAE,EAAE,2BAA2B;MAC/B,EAAE,EAAE,0BAA0B;MAC9B,EAAE,EAAE,cAAc;MAClB,EAAE,EAAE,eAAe;MACnB,EAAE,EAAE,aAAa;MACjB,EAAE,EAAE,0BAA0B;MAC9B,EAAE,EAAE,yBAAyB;MAC7B,EAAE,EAAE,uBAAuB;MAC3B,EAAE,EAAE,wBAAwB;MAC5B,EAAE,EAAE,sBAAsB;MAC1B,EAAE,EAAE,iBAAiB;MACrB,EAAE,EAAE,0BAA0B;MAC9B,EAAE,EAAE,2BAA2B;MAC/B,EAAE,EAAE,4BAA4B;MAChC,EAAE,EAAE,0BAA0B;MAC9B,EAAE,EAAE,yBAAyB;MAC7B,EAAE,EAAE,wBAAwB;MAC5B,EAAE,EAAE,yBAAyB;MAC7B,EAAE,EAAE;KACL;IAMO,iBAAY,GAA8B;MAChD,CAAC,EAAE,eAAe;MAClB,CAAC,EAAE,kBAAkB;MACrB,CAAC,EAAE,mBAAmB;MACtB,CAAC,EAAE,YAAY;MACf,EAAE,EAAE,eAAe;MACnB,EAAE,EAAE,eAAe;MACnB,EAAE,EAAE,aAAa;MACjB,EAAE,EAAE,aAAa;MACjB,EAAE,EAAE,aAAa;MACjB,EAAE,EAAE,sBAAsB;MAC1B,EAAE,EAAE,eAAe;MACnB,EAAE,EAAE,UAAU;MACd,EAAE,EAAE,UAAU;MACd,EAAE,EAAE,UAAU;MACd,EAAE,EAAE,mBAAmB;MACvB,EAAE,EAAE,mBAAmB;MACvB,EAAE,EAAE,UAAU;MACd,EAAE,EAAE,UAAU;MACd,EAAE,EAAE,UAAU;MACd,EAAE,EAAE,UAAU;MACd,EAAE,EAAE,iBAAiB;MACrB,EAAE,EAAE,iBAAiB;MACrB,EAAE,EAAE,iBAAiB;MACrB,EAAE,EAAE,iBAAiB;MACrB,EAAE,EAAE,iBAAiB;MACrB,EAAE,EAAE,mBAAmB;MACvB,EAAE,EAAE,mBAAmB;MACvB,EAAE,EAAE;KACL;IAEO,sBAAiB,GAA8B;MACrD,CAAC,EAAE,qBAAqB;MACxB,CAAC,EAAE,wBAAwB;MAC3B,CAAC,EAAE,yBAAyB;MAC5B,CAAC,EAAE,kBAAkB;MACrB,EAAE,EAAE,qBAAqB;MACzB,EAAE,EAAE,eAAe;MACnB,EAAE,EAAE,aAAa;MACjB,EAAE,EAAE,aAAa;MACjB,EAAE,EAAE,aAAa;MACjB,EAAE,EAAE,yBAAyB;MAC7B,EAAE,EAAE,eAAe;MACnB,EAAE,EAAE,UAAU;MACd,EAAE,EAAE,UAAU;MACd,EAAE,EAAE,UAAU;MACd,EAAE,EAAE,mBAAmB;MACvB,EAAE,EAAE,mBAAmB;MACvB,EAAE,EAAE,UAAU;MACd,EAAE,EAAE,UAAU;MACd,EAAE,EAAE,UAAU;MACd,EAAE,EAAE,UAAU;MACd,EAAE,EAAE,wBAAwB;MAC5B,EAAE,EAAE,wBAAwB;MAC5B,EAAE,EAAE,wBAAwB;MAC5B,EAAE,EAAE,wBAAwB;MAC5B,EAAE,EAAE,wBAAwB;MAC5B,EAAE,EAAE,mBAAmB;MACvB,EAAE,EAAE,mBAAmB;MACvB,EAAE,EAAE;KACL;EAvGuC;EAExCrI,kBAAkB,CAACkJ,QAAyB,EAAEC,SAA0B;IACtE,MAAM1O,GAAG,GAAG,iCAAiCyO,QAAQ,cAAcC,SAAS,i0CAAi0C;IAE74C,OAAO,IAAI,CAACd,IAAI,CAACG,GAAG,CAAU/N,GAAG,CAAC;EACpC;EAiCA4G,qBAAqB,CAACD,IAAY;IAChC,OAAO,IAAI,CAACyI,mBAAmB,CAACzI,IAAI,CAAC,IAAI,EAAE;EAC7C;EAiEAG,cAAc,CAACH,IAAY;IACzB,OAAO,IAAI,CAAC0I,YAAY,CAAC1I,IAAI,CAAC,IAAI,EAAE;EACtC;EAEA8C,mBAAmB,CAAC9C,IAAY;IAC9B,OAAO,IAAI,CAAC2I,iBAAiB,CAAC3I,IAAI,CAAC,IAAI,EAAE;EAC3C;;AAlHWwI,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAA3O,SAAd2O,cAAc;EAAAjB,YAFb;AAAM;;;;;;;;;;;;;;ACJyB;AAG7CqB,sEAAAA,EAAwB,CAACC,eAAe,CAACpQ,sDAAS,CAAC,CAChDqQ,KAAK,CAACC,GAAG,IAAIC,OAAO,CAAC/O,KAAK,CAAC8O,GAAG,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/interceptors/api.interceptor.ts","./src/app/core/interceptors/error.interceptor.ts","./src/app/core/not-found/not-found-routing.module.ts","./src/app/core/not-found/not-found.module.ts","./src/app/core/not-found/page/not-found/not-found.component.ts","./src/app/core/not-found/page/not-found/not-found.component.html","./src/app/core/search/search-bar/search-bar.component.ts","./src/app/core/search/search-bar/search-bar.component.html","./src/app/core/search/search.module.ts","./src/app/environments/environments.ts","./src/app/page/app-page/app-page.component.html","./src/app/page/app-page/app-page.component.ts","./src/app/page/app-page/components/long-forecast/long-forecast.module.ts","./src/app/page/app-page/components/long-forecast/seven-days/seven-days.component.html","./src/app/page/app-page/components/long-forecast/seven-days/seven-days.component.ts","./src/app/page/app-page/components/short-forecast/current-day/current-day.component.html","./src/app/page/app-page/components/short-forecast/current-day/current-day.component.ts","./src/app/page/app-page/components/short-forecast/hourly-forecast/hourly-forecast.component.html","./src/app/page/app-page/components/short-forecast/hourly-forecast/hourly-forecast.component.ts","./src/app/page/app-page/components/short-forecast/selected-day/selected-day.component.html","./src/app/page/app-page/components/short-forecast/selected-day/selected-day.component.ts","./src/app/page/app-page/components/short-forecast/short-forecast.module.ts","./src/app/page/page-routing.module.ts","./src/app/page/page.module.ts","./src/app/services/chosen-location.service.ts","./src/app/services/current-location.service.ts","./src/app/services/location-img.service.ts","./src/app/services/search.service.ts","./src/app/services/sibling.service.ts","./src/app/services/weather.service.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: '/day/1'\n  },\n  {\n    path: '**',\n    loadChildren: () => import('./core/not-found/not-found-routing.module').then(m => m.NotFoundRoutingModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n\n}\n","<router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { PageModule } from './page/page.module';\nimport { ApiInterceptor } from './core/interceptors/api.interceptor';\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { NotFoundModule } from './core/not-found/not-found.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    PageModule,\n    NotFoundModule,\n    AppRoutingModule\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: ApiInterceptor, multi: true }, { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }],\n\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environments';\n\n@Injectable()\nexport class ApiInterceptor implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let modifiedRequest = request;\n\n    if (request.url.includes('search_location_api_endpoint')) {\n      modifiedRequest = request.clone({\n        url: `${environment.search_location_api_endpoint}${request.url.replace('search_location_api_endpoint', '')}`\n      });\n    } else if (request.url.includes('current_location_api_endpoint')) {\n      modifiedRequest = request.clone({\n        url: `${environment.current_location_api_endpoint}${request.url.replace('current_location_api_endpoint', '')}`\n      });\n    } else if (request.url.includes('weather_api_endpoint')) {\n      modifiedRequest = request.clone({\n        url: `${environment.weather_api_endpoint}${request.url.replace('weather_api_endpoint', '')}`\n      });\n    }\n\n    return next.handle(modifiedRequest);\n  }\n}","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError((error) => {\n        if (error.status !== 200) {\n          let message = `Une erreur est survenue lors de la requête HTTP. Erreur satus : ${error.status}`;\n          return throwError(() => new Error(message));\n        } else {\n          return throwError(error);\n        }\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotFoundComponent } from './page/not-found/not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '**',\n    component: NotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NotFoundRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NotFoundRoutingModule } from './not-found-routing.module';\nimport { NotFoundComponent } from './page/not-found/not-found.component';\n\n\n@NgModule({\n  declarations: [\n    NotFoundComponent\n  ],\n  imports: [\n    CommonModule,\n    NotFoundRoutingModule\n  ]\n})\nexport class NotFoundModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent {\n\n}\n","<div class=\"flex-container\">\n  <div class=\"text-center\">\n    <h1>\n      <span class=\"fade-in\" id=\"digit1\">4</span>\n      <span class=\"fade-in\" id=\"digit2\">0</span>\n      <span class=\"fade-in\" id=\"digit3\">4</span>\n    </h1>\n    <h3 class=\"fadeIn\">PAGE NOT FOUND</h3>\n    <a routerLink=\"/homepage\"\n      ><button type=\"button\" name=\"button\">Return To Home</button>\n    </a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ChosenLocationService } from 'src/app/services/chosen-location.service';\nimport { LocationImgService } from 'src/app/services/location-img.service';\nimport { SearchService } from 'src/app/services/search.service';\nimport toastr from 'toastr';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.scss'],\n})\nexport class SearchBarComponent implements OnInit {\n  currentIndex: number = 0;\n  locationInput!: string;\n  locationFound!: any; // le nom de la ville qu'on va afficher sur la page\n  photos: any;\n  placeName: any;\n  imgSearch: any;\n\n  constructor(\n    private chosenLocationService: ChosenLocationService,\n    private searchService: SearchService,\n    private locationImgService: LocationImgService,\n  ) { }\n\n  ngOnInit() {\n    this.startSlideshow();\n\n    this.searchService.getPlace().subscribe((osmObj) => {\n      if (osmObj)\n        this.locationFound = osmObj;\n      if (this.locationFound) {\n        this.imgSearch = this.locationFound.display_name.split(',')\n        if (this.imgSearch[0] !== this.imgSearch[this.imgSearch.length - 1])\n          this.locationImgService.getImgFromLoc(\n            `${this.imgSearch[0]}, ${this.imgSearch[this.imgSearch.length]}`\n          ).subscribe({\n            next: (response: any) => {\n              this.photos = response.results;\n            }\n          });\n        else\n          this.locationImgService.getImgFromLoc(\n            `${this.imgSearch[0]}`\n          ).subscribe({\n            next: (response: any) => {\n              this.photos = response.results;\n            }\n          });\n      }\n\n    });\n\n  }\n\n\n  onSubmit() {\n    this.getPlaceName(this.locationInput);\n\n  }\n\n  getPlaceName(place: string) {\n    this.chosenLocationService.getLatAndLonFromSearch(place).subscribe({\n      next: (osmObj) => {\n        this.locationFound = osmObj[0];\n        if (this.locationFound) {\n          this.imgSearch = this.locationFound.display_name.split(',')\n          if (this.imgSearch[0] !== this.imgSearch[this.imgSearch.length - 1])\n            this.locationImgService.getImgFromLoc(\n              `${this.imgSearch[0]}, ${this.imgSearch[this.imgSearch.length]}`\n            ).subscribe({\n              next: (response: any) => {\n                this.photos = response.results;\n              }\n            });\n          else\n            this.locationImgService.getImgFromLoc(\n              `${this.imgSearch[0]}`\n            ).subscribe({\n              next: (response: any) => {\n                this.photos = response.results;\n              }\n            });\n        }\n        else {\n          this.locationImgService.getImgFromLoc(\n            `backroom`\n          ).subscribe({\n            next: (response: any) => {\n              this.photos = response.results;\n            }\n          });\n          toastr.error('Aucun lieu trouvé', 'Recherche', {\n            closeButton: true,\n            progressBar: false,\n            timeOut: 3000,\n            extendedTimeOut: 7000,\n            tapToDismiss: false,\n            toastClass: 'toast place-not-found'\n          });\n        }\n        this.searchService.setPlace(this.locationFound);\n      }\n    });\n  }\n\n  startSlideshow() {\n    setInterval(() => {\n      if (this.photos)\n        this.currentIndex = (this.currentIndex + 1) % this.photos.length;\n    }, 5000);\n  }\n\n  placeholderText: string = \"Chercher Lieu (Ville, Pays, ...)\";\n\n  removePlaceholder() {\n    this.placeholderText = \"\";\n  }\n\n  restorePlaceholder() {\n    this.placeholderText = \"Chercher Lieu (Ville, Pays, ...)\";\n  }\n}\n","<div class=\"search\">\n    <form #form=\"ngForm\" (submit)=\"onSubmit()\">\n        <input type=\"text\" [placeholder]=\"placeholderText\" (focus)=\"removePlaceholder()\" (blur)=\"restorePlaceholder()\"\n            name=\"city\" [(ngModel)]=\"locationInput\">\n    </form>\n</div>\n<div class=\"slideshow\">\n    <div *ngFor=\"let photo of photos; let i = index\" [class.active]=\"i === currentIndex\"\n        [style.background-image]=\"'url(' + photo.urls.regular + ')'\" class=\"slide\"></div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SearchBarComponent } from './search-bar/search-bar.component';\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    SearchBarComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [SearchBarComponent]\n})\nexport class SearchModule { }\n","export const environment = {\n    search_location_api_endpoint: \"https://nominatim.openstreetmap.org/search\",\n    current_location_api_endpoint: \"https://nominatim.openstreetmap.org/reverse\",\n    weather_api_endpoint: \"https://api.open-meteo.com/v1/forecast\"\n}","<app-search-bar>[cityName]=\"cityName\"</app-search-bar>\n\n<app-current-day *ngIf=\"dayIndex === 0\" [currentLocation]=\"currentLocation\" [chosenLocation]=\"chosenLocation\"\n    [weather]=\"weather\"></app-current-day>\n\n<app-selected-day *ngIf=\"dayIndex !== 0\" [currentLocation]=\"currentLocation\" [chosenLocation]=\"chosenLocation\"\n    [weather]=\"weather\"></app-selected-day>\n\n<app-hourly-forecast [currentLocation]=\"currentLocation\" [chosenLocation]=\"chosenLocation\"\n    [weather]=\"weather\"></app-hourly-forecast>\n\n<app-seven-days [currentLocation]=\"currentLocation\" [chosenLocation]=\"chosenLocation\"\n    [weather]=\"weather\"></app-seven-days>","import { Component } from '@angular/core';\nimport { Location } from 'src/app/models/location';\nimport { Daily, Weather } from 'src/app/models/weather';\nimport { CurrentLocationService } from 'src/app/services/current-location.service';\nimport { SearchService } from 'src/app/services/search.service';\nimport { WeatherService } from 'src/app/services/weather.service';\n\n@Component({\n  selector: 'app-page',\n  templateUrl: './app-page.component.html',\n  styleUrls: ['./app-page.component.scss'],\n})\nexport class AppPageComponent {\n  public currentLocation!: Location;\n  public chosenLocation!: Location;\n  public weather!: Weather;\n\n  public date: Date = new Date();\n  public currentHour: number = Number(this.date.getHours().toString().padStart(2, '0'));\n\n  public dailyForecast!: Daily;\n  public dates!: string[];\n  public sevenWeather!: number[];\n  public sevenWeatherDescriptions!: string[];\n  public sevenWeatherIcons!: string[];\n  public sevenWeatherTempMin!: number[];\n  public sevenWeatherTempMax!: number[];\n  public sevenWeatherApparentTempMin!: number[];\n  public sevenWeatherApparentTempMax!: number[];\n  public sevenWeatherPrecipitationProbabilityMean!: number[]\n\n  public winddirection_10m!: number[];\n  public windspeed_10m!: number[];\n\n  public dayIndex!: number;\n  public hourIndex!: number;\n\n\n  private chosenPlace: any;\n\n  constructor(private currentLocationService: CurrentLocationService, private weatherService: WeatherService, private searchService: SearchService) {\n    const url = window.location.pathname;\n    const segments = url.split('/');\n    if (segments.length === 4) {\n      this.hourIndex = Number(segments[segments.length - 1]);\n      this.dayIndex = Number(segments[segments.length - 2]) - 1;\n    } else if (segments.length === 3) {\n      this.dayIndex = Number(segments[segments.length - 1]) - 1;\n      this.hourIndex = Number(this.currentHour);\n    }\n  }\n\n  ngOnInit() {\n    this.currentLocationService.getCurrentLocationFromBrowser().subscribe(\n      (location) => {\n        this.currentLocation = location;\n      }\n    );\n  }\n\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SevenDaysComponent } from './seven-days/seven-days.component';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [\n    SevenDaysComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports: [\n    SevenDaysComponent\n  ]\n})\nexport class LongForecastModule { }\n","<div class=\"container daily-container\">\n    <label>Prévisions par jours : </label>\n    <div class=\"card-container daily-card-container\">\n        <div *ngIf=\"dailyForecast\" class=\"row\">\n            <div class=\"col\" *ngFor=\"let date of dailyForecast.time; let i = index\">\n                <div class=\"card daily-card\" [routerLink]=\"['/day', i + 1]\">\n                    <div class=\" card-body daily-card-body\">\n                        {{ formatDate(date) }}\n                        <img src=\"assets/weather_img/{{ sevenWeatherIcons[i] }}\" alt=\"Weather Icon\"> <br>\n                        {{ sevenWeatherDescriptions[i] }} <br> <br>\n                        {{ sevenWeatherTempMin[i] }}°C - {{ sevenWeatherTempMax[i] }}°C <br> <br>\n                        Ressenti {{ sevenWeatherApparentTempMin[i] }}°C - {{ sevenWeatherApparentTempMax[i]\n                        }}°C\n                        <br> <br>\n                        Pluie: {{ sevenWeatherPrecipitationProbabilityMean[i] }} %\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>","import { Component, Input, SimpleChanges } from '@angular/core';\nimport { WeatherService } from 'src/app/services/weather.service';\nimport { Router } from '@angular/router';\nimport { Daily, Weather } from 'src/app/models/weather';\nimport { Location } from 'src/app/models/location';\nimport { SearchService } from 'src/app/services/search.service';\nimport { debounceTime } from 'rxjs';\nimport { SiblingService } from 'src/app/services/sibling.service';\n\n@Component({\n  selector: 'app-seven-days',\n  templateUrl: './seven-days.component.html',\n  styleUrls: ['./seven-days.component.scss']\n})\nexport class SevenDaysComponent {\n  @Input() public currentLocation!: Location;\n  @Input() public chosenLocation!: Location;\n  @Input() public weather!: Weather;\n\n  @Input() public dailyForecast!: Daily;\n  @Input() public dates!: string[];\n  @Input() public sevenWeather!: number[];\n  @Input() public sevenWeatherDescriptions!: string[];\n  @Input() public sevenWeatherIcons!: string[];\n  @Input() public sevenWeatherTempMin!: number[];\n  @Input() public sevenWeatherTempMax!: number[];\n  @Input() public sevenWeatherApparentTempMin!: number[];\n  @Input() public sevenWeatherApparentTempMax!: number[];\n  @Input() public sevenWeatherPrecipitationProbabilityMean!: number[]\n\n  public chosenPlace: any\n  public winddirection_10m!: number[];\n  public windspeed_10m!: number[];\n\n  constructor(private weatherService: WeatherService, private router: Router, private searchService: SearchService, private siblingService: SiblingService) { }\n\n  ngOnInit() {\n    this.searchService.getPlace().subscribe((osmObj) => {\n      this.chosenPlace = osmObj;\n      this.getDailyForecast();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['currentLocation'] && changes['currentLocation'].currentValue) {\n      this.getDailyForecast();\n    }\n  }\n  getDailyForecast() {\n    if (this.chosenPlace)\n      this.weatherService.getWeatherForecast(this.chosenPlace.lat, this.chosenPlace.lon)\n        .subscribe(\n          (weather) => {\n            this.dates = weather.daily.time;\n            this.sevenWeatherTempMin = weather.daily.temperature_2m_min;\n            this.sevenWeatherTempMax = weather.daily.temperature_2m_max;\n            this.sevenWeatherApparentTempMin = weather.daily.apparent_temperature_min;\n            this.sevenWeatherApparentTempMax = weather.daily.apparent_temperature_max;\n            this.sevenWeatherPrecipitationProbabilityMean = weather.daily.precipitation_probability_mean;\n            this.sevenWeatherDescriptions = weather.daily.weathercode.map(code => this.weatherService.getWeatherDescription(code));\n            this.sevenWeatherIcons = weather.daily.weathercode.map(code => this.weatherService.getWeatherIcon(code));\n            this.winddirection_10m = weather.daily.winddirection_10m_dominant;\n            this.windspeed_10m = weather.daily.windspeed_10m_max;\n            return this.dailyForecast = weather.daily;\n          }\n        );\n    else if (this.currentLocation)\n      this.weatherService.getWeatherForecast(this.currentLocation.lat, this.currentLocation.lon)\n        .subscribe(\n          (weather) => {\n            this.dates = weather.daily.time;\n            this.sevenWeatherTempMin = weather.daily.temperature_2m_min;\n            this.sevenWeatherTempMax = weather.daily.temperature_2m_max;\n            this.sevenWeatherApparentTempMin = weather.daily.apparent_temperature_min;\n            this.sevenWeatherApparentTempMax = weather.daily.apparent_temperature_max;\n            this.sevenWeatherPrecipitationProbabilityMean = weather.daily.precipitation_probability_mean;\n            this.sevenWeatherDescriptions = weather.daily.weathercode.map(code => this.weatherService.getWeatherDescription(code));\n            this.sevenWeatherIcons = weather.daily.weathercode.map(code => this.weatherService.getWeatherIcon(code));\n            this.winddirection_10m = weather.daily.winddirection_10m_dominant;\n            this.windspeed_10m = weather.daily.windspeed_10m_max;\n            return this.dailyForecast = weather.daily;\n          }\n        );\n  }\n\n\n  formatDate(date: string): string {\n    const weekdays = ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'];\n    const months = ['janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'];\n\n    const dateObj = new Date(date);\n    const dayOfWeek = weekdays[dateObj.getDay()];\n    const dayOfMonth = dateObj.getDate();\n    const month = months[dateObj.getMonth()];\n\n    return `${dayOfWeek} ${dayOfMonth} ${month}`;\n  }\n\n\n}","<div *ngIf=\"dailyForecast\" class=\"container\">\n  <div class=\"upper-data\">\n    <img class='bg-img' src=\"../assets/alain.png\" alt=\"background image\" />\n    <div class=\"meteo-data\">\n      <span ng *ngIf=\"currentLocation && !chosenPlace\" class=\"location\">{{ currentLocation.address.city}}, {{\n        currentLocation.address.country}}\n      </span>\n      <div ng *ngIf=\"chosenPlace\" class=\"location\">{{ chosenPlace.display_name}}\n      </div>\n\n      <div *ngIf=\"currentHourForecast\">{{formatDate(dates[dayIndex])}} {{currentHourForecast.hour}}</div>\n      <div *ngIf=\"currentHourForecast\" class=\"temp\">\n        {{currentHourForecast.temperature}}°C</div>\n      <div *ngIf=\"currentHourForecast\"> ressentie\n        {{currentHourForecast.apparentTemperature}}°C</div>\n      <div *ngIf=\"currentHourForecast\" style=\"text-align: center;\">\n        <h3>\n          <img *ngIf=\"currentHourForecast.icon && currentHourForecast.isDay\"\n            src=\"../../../../../../assets/weather_img/{{currentHourForecast.icon}}\" alt=\"Weather Icon\">\n          <img *ngIf=\"currentHourForecast.icon && !currentHourForecast.isDay\"\n            src=\"../../../../../../assets/weather_img/{{currentHourForecast.iconNight}}\" alt=\"Weather Icon\">\n          {{currentHourForecast.description}}\n        </h3>\n        {{currentHourForecast.precipitationProbability}} % de chance de pluie\n      </div>\n    </div>\n  </div>\n  <div class=\"lower-data\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <div class=\"info-block\">\n            <div class=\"info-label\">Temp min :</div>\n            <div class=\"info-value\">{{ sevenWeatherTempMin[dayIndex] }}°C</div>\n          </div>\n        </div>\n        <div class=\"col\">\n          <div class=\"info-block\">\n            <div class=\"info-label\">Temp max :</div>\n            <div class=\"info-value\">{{ sevenWeatherTempMax[dayIndex] }}°C</div>\n          </div>\n        </div>\n      </div>\n      <hr>\n      <div class=\"row\">\n        <div class=\"col\">\n          <div class=\"info-block\">\n            <div class=\"info-label\">Humidité :</div>\n            <div style=\"height: 0.6vmax;\"></div>\n            <div *ngIf=\"currentHourForecast\" class=\"info-value\">\n              <i class=\"fa-solid fa-droplet\"></i> :&nbsp;&nbsp;{{ currentHourForecast.humidity }}\n            </div>\n          </div>\n        </div>\n        <div class=\"col\">\n          <div *ngIf=\"currentHourForecast\" class=\"info-block-2\">\n            <div class=\"info-label vent\">Vent :</div>\n\n            <div class=\"info-value\"><i class=\"fa-solid fa-wind\"></i> :&nbsp;&nbsp;<br class=\"break-line\">{{\n              currentHourForecast.windSpeed\n              }} km/h\n            </div>\n            <div class=\"info-direction\">\n              <i class=\"fa-regular fa-compass\"></i> :&nbsp;&nbsp;\n              <i class=\"fa-solid fa-angles-down\" *ngIf=\"currentHourForecast.windSpeed > 50\"\n                [ngStyle]=\"{'transform': 'rotate(' + currentHourForecast.windDirection + 'deg)'}\"></i>\n              <i class=\"fa-solid fa-circle-down\" *ngIf=\"currentHourForecast.windSpeed < 50\"\n                [ngStyle]=\"{'transform': 'rotate(' + currentHourForecast.windDirection + 'deg)'}\"></i>\n              <br class=\"break-line-2\">\n              <span>\n                {{ getWindDirection(currentHourForecast.windDirection) }}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Input, SimpleChanges } from '@angular/core';\nimport { Location } from 'src/app/models/location';\nimport { Daily, Hourly, Weather } from 'src/app/models/weather';\nimport { SearchService } from 'src/app/services/search.service';\nimport { SiblingService } from 'src/app/services/sibling.service';\nimport { WeatherService } from 'src/app/services/weather.service';\n\n@Component({\n  selector: 'app-current-day',\n  templateUrl: './current-day.component.html',\n  styleUrls: ['./current-day.component.scss'],\n})\nexport class CurrentDayComponent {\n  @Input() public currentLocation!: Location;\n  @Input() public chosenLocation!: Location;\n  @Input() public weather!: Weather;\n\n  @Input() public dailyForecast!: Daily;\n  @Input() public dates!: string[];\n  @Input() public sevenWeather!: number[];\n  @Input() public sevenWeatherDescriptions!: string[];\n  @Input() public sevenWeatherIcons!: string[];\n  @Input() public sevenWeatherTempMin!: number[];\n  @Input() public sevenWeatherTempMax!: number[];\n  @Input() public sevenWeatherApparentTempMin!: number[];\n  @Input() public sevenWeatherApparentTempMax!: number[];\n  @Input() public sevenWeatherPrecipitationProbabilityMean!: number[]\n\n  @Input() public winddirection_10m!: number[];\n  @Input() public windspeed_10m!: number[];\n\n  public hourlyForecast!: Hourly;\n  public hours!: string[];\n  public hourlyWeather!: number[];\n  public hourlyWeatherDescriptions!: string[];\n  public hourlyWeatherIcons!: string[];\n  public hourlyWeatherTemp!: number[];\n  public hourlyWeatherApparentTemp!: number[];\n  public hourlyWeatherPrecipitationProbability!: number[]\n  public hourlyWeatherHumidity!: number[]\n\n  public currentHourForecast!: { hour: string; temperature: number; apparentTemperature: number; precipitationProbability: number; humidity: number; description: string; isDay: number; icon: string; iconNight: string; windSpeed: number; windDirection: number; } | null;\n\n  public date: Date = new Date();\n  public currentHour: number = Number(this.date.getHours().toString().padStart(2, '0'));\n\n  public dayIndex!: number;\n  public hourIndex!: number;\n\n  public chosenPlace: any;\n\n  public hourlyWeatherIsDay!: number[];\n  public hourlyWeatherIconsNight!: string[];\n\n  constructor(private weatherService: WeatherService, private searchService: SearchService, private siblingService: SiblingService) {\n    this.setIndexs()\n  }\n\n  setIndexs() {\n    const url = window.location.pathname;\n    const segments = url.split('/');\n    if (segments.length === 4) {\n      this.hourIndex = Number(segments[segments.length - 1]);\n      this.dayIndex = Number(segments[segments.length - 2]) - 1;\n    } else if (segments.length === 3) {\n      this.dayIndex = Number(segments[segments.length - 1]) - 1;\n      this.hourIndex = this.currentHour;\n    }\n  }\n\n  ngOnInit() {\n    this.searchService.getPlace().subscribe((osmObj) => {\n      this.chosenPlace = osmObj;\n      this.getDailyForecast();\n      this.getHourlyForecast(this.dayIndex);\n    });\n    this.siblingService.getRefreshObservable().subscribe(() => {\n      this.setIndexs()\n      this.getHourlyForecast(this.dayIndex)\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['currentLocation'] && changes['currentLocation'].currentValue) {\n      this.getDailyForecast();\n      this.getHourlyForecast(this.dayIndex);\n    }\n  }\n\n\n  formatDate(date: string): string {\n    const weekdays = ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'];\n    const months = ['janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'];\n\n    const dateObj = new Date(date);\n    const dayOfWeek = weekdays[dateObj.getDay()];\n    const dayOfMonth = dateObj.getDate();\n    const month = months[dateObj.getMonth()];\n\n    return `${dayOfWeek} ${dayOfMonth} ${month}`;\n  }\n\n  getDailyForecast() {\n    if (this.chosenPlace)\n      this.weatherService.getWeatherForecast(this.chosenPlace.lat, this.chosenPlace.lon)\n        .subscribe(\n          (weather) => {\n            this.dates = weather.daily.time;\n            this.sevenWeatherTempMin = weather.daily.temperature_2m_min;\n            this.sevenWeatherTempMax = weather.daily.temperature_2m_max;\n            this.sevenWeatherApparentTempMin = weather.daily.apparent_temperature_min;\n            this.sevenWeatherApparentTempMax = weather.daily.apparent_temperature_max;\n            this.sevenWeatherPrecipitationProbabilityMean = weather.daily.precipitation_probability_mean;\n            this.sevenWeatherDescriptions = weather.daily.weathercode.map(code => this.weatherService.getWeatherDescription(code));\n            this.sevenWeatherIcons = weather.daily.weathercode.map(code => this.weatherService.getWeatherIcon(code));\n            this.winddirection_10m = weather.daily.winddirection_10m_dominant;\n            this.windspeed_10m = weather.daily.windspeed_10m_max;\n            return this.dailyForecast = weather.daily;\n          }\n        );\n    else if (this.currentLocation)\n      this.weatherService.getWeatherForecast(this.currentLocation.lat, this.currentLocation.lon)\n        .subscribe(\n          (weather) => {\n            this.dates = weather.daily.time;\n            this.sevenWeatherTempMin = weather.daily.temperature_2m_min;\n            this.sevenWeatherTempMax = weather.daily.temperature_2m_max;\n            this.sevenWeatherApparentTempMin = weather.daily.apparent_temperature_min;\n            this.sevenWeatherApparentTempMax = weather.daily.apparent_temperature_max;\n            this.sevenWeatherPrecipitationProbabilityMean = weather.daily.precipitation_probability_mean;\n            this.sevenWeatherDescriptions = weather.daily.weathercode.map(code => this.weatherService.getWeatherDescription(code));\n            this.sevenWeatherIcons = weather.daily.weathercode.map(code => this.weatherService.getWeatherIcon(code));\n            this.winddirection_10m = weather.daily.winddirection_10m_dominant;\n            this.windspeed_10m = weather.daily.windspeed_10m_max;\n            return this.dailyForecast = weather.daily;\n          }\n        );\n  }\n\n  getHourlyForecast(dayIndex: number) {\n    const startIndex = dayIndex * 24;\n    const endIndex = startIndex + 24;\n    if (this.chosenPlace)\n      this.weatherService.getWeatherForecast(this.chosenPlace.lat, this.chosenPlace.lon)\n        .subscribe(\n          (weather) => {\n            this.hourlyForecast = weather.hourly;\n            this.hours = weather.hourly.time.slice(startIndex, endIndex).map(date => date.split('T')[1]);\n            this.hourlyWeatherTemp = weather.hourly.temperature_2m.slice(startIndex, endIndex);\n            this.hourlyWeatherApparentTemp = weather.hourly.apparent_temperature.slice(startIndex, endIndex);\n            this.hourlyWeatherPrecipitationProbability = weather.hourly.precipitation_probability.slice(startIndex, endIndex);\n            this.hourlyWeatherHumidity = weather.hourly.relativehumidity_2m.slice(startIndex, endIndex);\n            this.hourlyWeatherDescriptions = weather.hourly.weathercode.slice(startIndex, endIndex).map(code => this.weatherService.getWeatherDescription(code));\n            this.hourlyWeatherIsDay = this.hourlyForecast.is_day.slice(startIndex, endIndex);\n            this.hourlyWeatherIcons = this.hourlyForecast.weathercode.slice(startIndex, endIndex).map(code => this.weatherService.getWeatherIcon(code));\n            this.hourlyWeatherIconsNight = this.hourlyForecast.weathercode.slice(startIndex, endIndex).map(code => this.weatherService.getWeatherIconNight(code));\n            this.winddirection_10m = weather.hourly.winddirection_10m.slice(startIndex, endIndex);\n            this.windspeed_10m = weather.hourly.windspeed_10m.slice(startIndex, endIndex);\n            this.currentHourForecast = this.getCurrentHourForecast();\n            this.currentHourForecast = this.getSelectedHourForecast(this.hourIndex);\n          }\n        );\n    else if (this.currentLocation)\n      this.weatherService.getWeatherForecast(this.currentLocation.lat, this.currentLocation.lon)\n        .subscribe(\n          (weather) => {\n            this.hourlyForecast = weather.hourly;\n            this.hours = weather.hourly.time.slice(startIndex, endIndex).map(date => date.split('T')[1]);\n            this.hourlyWeatherTemp = weather.hourly.temperature_2m.slice(startIndex, endIndex);\n            this.hourlyWeatherApparentTemp = weather.hourly.apparent_temperature.slice(startIndex, endIndex);\n            this.hourlyWeatherPrecipitationProbability = weather.hourly.precipitation_probability.slice(startIndex, endIndex);\n            this.hourlyWeatherHumidity = weather.hourly.relativehumidity_2m.slice(startIndex, endIndex);\n            this.hourlyWeatherDescriptions = weather.hourly.weathercode.slice(startIndex, endIndex).map(code => this.weatherService.getWeatherDescription(code));\n            this.hourlyWeatherIsDay = this.hourlyForecast.is_day.slice(startIndex, endIndex);\n            this.hourlyWeatherIcons = this.hourlyForecast.weathercode.slice(startIndex, endIndex).map(code => this.weatherService.getWeatherIcon(code));\n            this.hourlyWeatherIconsNight = this.hourlyForecast.weathercode.slice(startIndex, endIndex).map(code => this.weatherService.getWeatherIconNight(code));\n            this.winddirection_10m = weather.hourly.winddirection_10m.slice(startIndex, endIndex);\n            this.windspeed_10m = weather.hourly.windspeed_10m.slice(startIndex, endIndex);\n            this.currentHourForecast = this.getCurrentHourForecast();\n            this.currentHourForecast = this.getSelectedHourForecast(this.hourIndex);\n          }\n        );\n  }\n\n\n  getCurrentHourForecast() {\n    let currentHourIndex = -1\n    if (this.currentLocation)\n      currentHourIndex = this.hours.findIndex(hour => hour === `${this.currentHour}:00`);\n    if (currentHourIndex !== -1) {\n      const currentHourForecast = {\n        hour: this.hours[currentHourIndex],\n        temperature: this.hourlyWeatherTemp[currentHourIndex],\n        apparentTemperature: this.hourlyWeatherApparentTemp[currentHourIndex],\n        precipitationProbability: this.hourlyWeatherPrecipitationProbability[currentHourIndex],\n        humidity: this.hourlyWeatherHumidity[currentHourIndex],\n        description: this.hourlyWeatherDescriptions[currentHourIndex],\n        isDay: this.hourlyWeatherIsDay[currentHourIndex],\n        icon: this.hourlyWeatherIcons[currentHourIndex],\n        iconNight: this.hourlyWeatherIconsNight[currentHourIndex],\n        windDirection: this.winddirection_10m[currentHourIndex],\n        windSpeed: this.windspeed_10m[currentHourIndex]\n      };\n      return currentHourForecast;\n    } else {\n      return null;\n    }\n  }\n\n  getSelectedHourForecast(i: number) {\n    const currentHourForecast = {\n      hour: this.hours[i],\n      temperature: this.hourlyWeatherTemp[i],\n      apparentTemperature: this.hourlyWeatherApparentTemp[i],\n      precipitationProbability: this.hourlyWeatherPrecipitationProbability[i],\n      humidity: this.hourlyWeatherHumidity[i],\n      description: this.hourlyWeatherDescriptions[i],\n      isDay: this.hourlyWeatherIsDay[i],\n      icon: this.hourlyWeatherIcons[i],\n      iconNight: this.hourlyWeatherIconsNight[i],\n      windDirection: this.winddirection_10m[i],\n      windSpeed: this.windspeed_10m[i]\n    };\n    return currentHourForecast;\n  }\n\n  getWindDirection(degrees: number): string {\n    if (degrees >= 348.75 || degrees < 11.25) {\n      return 'Nord';\n    } else if (degrees >= 11.25 && degrees < 33.75) {\n      return 'Nord-Nord-Est';\n    } else if (degrees >= 33.75 && degrees < 56.25) {\n      return 'Nord-Est';\n    } else if (degrees >= 56.25 && degrees < 78.75) {\n      return 'Est-Nord-Est';\n    } else if (degrees >= 78.75 && degrees < 101.25) {\n      return 'Est';\n    } else if (degrees >= 101.25 && degrees < 123.75) {\n      return 'Est-Sud-Est';\n    } else if (degrees >= 123.75 && degrees < 146.25) {\n      return 'Sud-Est';\n    } else if (degrees >= 146.25 && degrees < 168.75) {\n      return 'Sud-Sud-Est';\n    } else if (degrees >= 168.75 && degrees < 191.25) {\n      return 'Sud';\n    } else if (degrees >= 191.25 && degrees < 213.75) {\n      return 'Sud-Sud-Ouest';\n    } else if (degrees >= 213.75 && degrees < 236.25) {\n      return 'Sud-Ouest';\n    } else if (degrees >= 236.25 && degrees < 258.75) {\n      return 'Ouest-Sud-Ouest';\n    } else if (degrees >= 258.75 && degrees < 281.25) {\n      return 'Ouest';\n    } else if (degrees >= 281.25 && degrees < 303.75) {\n      return 'Ouest-Nord-Ouest';\n    } else if (degrees >= 303.75 && degrees < 326.25) {\n      return 'Nord-Ouest';\n    } else {\n      return 'Nord-Nord-Ouest';\n    }\n  }\n\n}\n","<div class=\"container hourly-container\">\n    <label>Prévisions par heures : </label>\n    <div class=\"chart-container\">\n        <div class=\"chart\">\n            <div class=\"bar\" *ngFor=\"let temp of hourlyWeatherTemp\"></div>\n        </div>\n    </div>\n    <div class=\"card-container\" #cardContainer>\n        <div *ngIf=\"hourlyForecast\" class=\"row\">\n            <div class='col' *ngFor=\"let hour of hours; let i = index\">\n                <div class=\"card hourly-card\" (click)=\"navigateToHour(i)\"\n                    [ngClass]=\"{'current-hour-card': isCurrentHour(hour), 'selected-hour-card': isSelectedHour(hour), 'ten-hour-card': i === 10}\">\n\n                    <div class=\"card-body hourly-card-body\">\n                        {{ hour }} <br>\n                        <img *ngIf=\"hourlyWeatherIsDay[i]\" src=\"assets/weather_img/{{ hourlyWeatherIcons[i] }}\"\n                            alt=\"Weather Icon\">\n                        <img *ngIf=\"!hourlyWeatherIsDay[i]\" src=\"assets/weather_img/{{ hourlyWeatherIconsNight[i] }}\"\n                            alt=\"Weather Icon\"><br>\n                        {{hourlyWeatherTemp[i]}} °C\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, SimpleChanges, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { Location as AngularLocation } from '@angular/common';\nimport { Location } from 'src/app/models/location';\nimport { Hourly, Weather } from 'src/app/models/weather';\nimport { SearchService } from 'src/app/services/search.service';\nimport { WeatherService } from 'src/app/services/weather.service';\nimport { SiblingService } from 'src/app/services/sibling.service';\n\n@Component({\n  selector: 'app-hourly-forecast',\n  templateUrl: './hourly-forecast.component.html',\n  styleUrls: ['./hourly-forecast.component.scss']\n})\nexport class HourlyForecastComponent {\n  @ViewChild('cardContainer', { static: false }) cardContainer!: ElementRef;\n\n  @Input() public currentLocation!: Location;\n  @Input() public chosenLocation!: Location;\n  @Input() public weather!: Weather;\n\n  public date: Date = new Date();\n  public currentHour: number = Number(this.date.getHours().toString().padStart(2, '0'));\n\n  public hourlyForecast!: Hourly;\n  public hours!: string[];\n  public hourlyWeather!: number[];\n  public hourlyWeatherDescriptions!: string[];\n  public hourlyWeatherIcons!: string[];\n  public hourlyWeatherIsDay!: number[]; // 1 Day 0 night\n  public hourlyWeatherIconsNight!: string[];\n  public hourlyWeatherTemp!: number[];\n  public hourlyWeatherApparentTemp!: number[];\n  public hourlyWeatherPrecipitationProbability!: number[]\n  public hourlyWeatherHumidity!: number[]\n\n  public chosenPlace: any;\n\n  @Input() public dayIndex!: number;\n  @Input() public hourIndex!: number;\n\n  public selectedHourForecast!: { hour: string; temperature: number; apparentTemperature: number; precipitationProbability: number; humidity: number; description: string; icon: string; };\n\n\n  constructor(private weatherService: WeatherService, private searchService: SearchService, private router: Router, private route: ActivatedRoute, private location: AngularLocation, private siblingService: SiblingService) {\n    const url = window.location.pathname;\n    const segments = url.split('/');\n    if (segments.length === 4) {\n      this.hourIndex = Number(segments[segments.length - 1]);\n      this.dayIndex = Number(segments[segments.length - 2]) - 1;\n    } else if (segments.length === 3) {\n      this.dayIndex = Number(segments[segments.length - 1]) - 1;\n      this.hourIndex = this.currentHour;\n    }\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.getHourlyForecast(this.dayIndex);\n    });\n\n    this.searchService.getPlace().subscribe((osmObj) => {\n      this.chosenPlace = osmObj;\n      this.getHourlyForecast(this.dayIndex);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['currentLocation'] && changes['currentLocation'].currentValue) {\n      this.getHourlyForecast(this.dayIndex);\n    }\n    if (changes['hourIndex'] && changes['hourIndex'].currentValue) {\n      this.getHourlyForecast(this.dayIndex);\n    }\n  }\n\n  scrollToCurrentHour() {\n    if (this.cardContainer && this.cardContainer.nativeElement) {\n      const currentHourCard = this.cardContainer.nativeElement.querySelector('.current-hour-card');\n      if (currentHourCard) {\n        currentHourCard.scrollIntoView({ behavior: 'smooth', inline: 'start' });\n      }\n    }\n  }\n\n  scrollToSelectedHour() {\n    if (this.cardContainer && this.cardContainer.nativeElement) {\n      const selectedHourCard = this.cardContainer.nativeElement.querySelector('.selected-hour-card');\n      if (selectedHourCard) {\n        selectedHourCard.scrollIntoView({ behavior: 'smooth', inline: 'start' });\n      }\n    }\n  }\n\n  scrollTo10() {\n    if (this.cardContainer && this.cardContainer.nativeElement) {\n      const tenHourCard = this.cardContainer.nativeElement.querySelector('.ten-hour-card');\n      if (tenHourCard) {\n        tenHourCard.scrollIntoView({ behavior: 'smooth', inline: 'start' });\n      }\n    }\n  }\n\n  isCurrentHour(hour: string): boolean {\n    let currentHourToCompare = `${this.currentHour}:00`;\n    if (hour === `${currentHourToCompare}`) {\n      return true\n    }\n    else\n      return false\n  }\n\n  isSelectedHour(hour: string): boolean {\n    if (Number(hour.split(':')[0]) == this.hourIndex) {\n      return true\n    }\n    else {\n      return false\n    }\n  }\n\n  getHourlyForecast(dayIndex: number) {\n    const startIndex = dayIndex * 24;\n    const endIndex = startIndex + 24;\n    if (this.chosenPlace)\n      this.weatherService.getWeatherForecast(this.chosenPlace.lat, this.chosenPlace.lon)\n        .subscribe(\n          (weather) => {\n            this.hourlyForecast = weather.hourly;\n            this.hours = this.hourlyForecast.time.slice(startIndex, endIndex).map(date => date.split('T')[1]);\n            this.hourlyWeatherTemp = this.hourlyForecast.temperature_2m.slice(startIndex, endIndex);\n            this.hourlyWeatherApparentTemp = this.hourlyForecast.apparent_temperature.slice(startIndex, endIndex);\n            this.hourlyWeatherPrecipitationProbability = this.hourlyForecast.precipitation_probability.slice(startIndex, endIndex);\n            this.hourlyWeatherHumidity = this.hourlyForecast.relativehumidity_2m.slice(startIndex, endIndex);\n            this.hourlyWeatherDescriptions = this.hourlyForecast.weathercode.slice(startIndex, endIndex).map(code => this.weatherService.getWeatherDescription(code));\n            this.hourlyWeatherIsDay = this.hourlyForecast.is_day.slice(startIndex, endIndex);\n            this.hourlyWeatherIcons = this.hourlyForecast.weathercode.slice(startIndex, endIndex).map(code => this.weatherService.getWeatherIcon(code));\n            this.hourlyWeatherIconsNight = this.hourlyForecast.weathercode.slice(startIndex, endIndex).map(code => this.weatherService.getWeatherIconNight(code));\n            if (dayIndex === 0)\n              setTimeout(() => {\n                this.scrollToCurrentHour()\n                if (this.hourIndex !== this.currentHour)\n                  this.scrollToSelectedHour()\n              }, 10);\n            if (dayIndex !== 0)\n              setTimeout(() => {\n                this.scrollTo10()\n                if (this.hourIndex !== 10)\n                  this.scrollToSelectedHour()\n\n              }, 10);\n            this.selectedHourForecast = this.getSelectedHourForecast(this.hourIndex);\n          }\n        );\n    else if (this.currentLocation)\n      this.weatherService.getWeatherForecast(this.currentLocation.lat, this.currentLocation.lon)\n        .subscribe(\n          (weather) => {\n            this.hourlyForecast = weather.hourly;\n            this.hours = weather.hourly.time.slice(startIndex, endIndex).map(date => date.split('T')[1]);\n            this.hourlyWeatherTemp = weather.hourly.temperature_2m.slice(startIndex, endIndex);\n            this.hourlyWeatherApparentTemp = weather.hourly.apparent_temperature.slice(startIndex, endIndex);\n            this.hourlyWeatherPrecipitationProbability = weather.hourly.precipitation_probability.slice(startIndex, endIndex);\n            this.hourlyWeatherHumidity = weather.hourly.relativehumidity_2m.slice(startIndex, endIndex);\n            this.hourlyWeatherDescriptions = weather.hourly.weathercode.slice(startIndex, endIndex).map(code => this.weatherService.getWeatherDescription(code));\n            this.hourlyWeatherIsDay = this.hourlyForecast.is_day.slice(startIndex, endIndex);\n            this.hourlyWeatherIcons = this.hourlyForecast.weathercode.slice(startIndex, endIndex).map(code => this.weatherService.getWeatherIcon(code));\n            this.hourlyWeatherIconsNight = this.hourlyForecast.weathercode.slice(startIndex, endIndex).map(code => this.weatherService.getWeatherIconNight(code));\n            if (dayIndex === 0)\n              setTimeout(() => {\n                this.scrollToCurrentHour()\n                if (this.hourIndex !== this.currentHour)\n                  this.scrollToSelectedHour()\n              }, 10);\n            if (dayIndex !== 0)\n              setTimeout(() => {\n                this.scrollTo10()\n                if (this.hourIndex !== 10)\n                  this.scrollToSelectedHour()\n              }, 10);\n            this.selectedHourForecast = this.getSelectedHourForecast(this.hourIndex);\n          }\n        );\n  }\n\n  getSelectedHourForecast(i: number) {\n    const currentHourForecast = {\n      hour: this.hours[i],\n      temperature: this.hourlyWeatherTemp[i],\n      apparentTemperature: this.hourlyWeatherApparentTemp[i],\n      precipitationProbability: this.hourlyWeatherPrecipitationProbability[i],\n      humidity: this.hourlyWeatherHumidity[i],\n      description: this.hourlyWeatherDescriptions[i],\n      icon: this.hourlyWeatherIcons[i]\n    };\n    return currentHourForecast;\n  }\n\n  navigateToHour(i: number, callCount: number = 0) {\n    const currentUrl = this.router.url;\n    const segments = currentUrl.split('/');\n\n    if (segments[1] === 'homepage') {\n      segments[1] = 'day';\n      segments.splice(2, 0, '1');\n    }\n\n    if (segments.length === 4) {\n      segments[3] = i.toString();\n    } else {\n      segments.push(i.toString());\n    }\n\n    const newUrl = segments.join('/');\n\n    this.siblingService.refreshSibling();\n\n    this.router.navigateByUrl(newUrl).then(() => {\n      if (callCount < 1) {\n        this.navigateToHour(i, callCount + 1);\n      }\n    });\n  }\n}\n","<div *ngIf=\"dailyForecast\" class=\"container\">\n    <div class=\"upper-data\">\n        <img class=\"bg-img\" src=\"../assets/alain.png\" alt=\"background image\" />\n        <div class=\"meteo-data\">\n            <span ng *ngIf=\"currentLocation && !chosenPlace\" class=\"location\">{{ currentLocation.address.city}}, {{\n                currentLocation.address.country}}\n            </span>\n            <div ng *ngIf=\"displayNameChosenPlace\" class=\"location\">{{displayNameChosenPlace}}\n            </div>\n            <div *ngIf=\"selectedHourForecast\">\n                {{ formatDate(dates[dayIndex]) }}\n                {{selectedHourForecast.hour}}\n            </div>\n            <div *ngIf=\"selectedHourForecast\" class=\"temp\">\n                {{selectedHourForecast.temperature}}°C</div>\n            <div *ngIf=\"selectedHourForecast\"> ressentie\n                {{selectedHourForecast.apparentTemperature}}°C</div>\n            <div *ngIf=\"selectedHourForecast\" style=\"text-align: center;\">\n                <h3>\n                    <img *ngIf=\"selectedHourForecast.icon && selectedHourForecast.isDay\"\n                        src=\"../../../../../../assets/weather_img/{{selectedHourForecast.icon}}\" alt=\"Weather Icon\">\n                    <img *ngIf=\"selectedHourForecast.icon && !selectedHourForecast.isDay\"\n                        src=\"../../../../../../assets/weather_img/{{selectedHourForecast.iconNight}}\"\n                        alt=\"Weather Icon\">\n                    {{selectedHourForecast.description}}\n                </h3>\n                {{selectedHourForecast.precipitationProbability}} % de chance de pluie\n            </div>\n        </div>\n    </div>\n    <div class=\"lower-data\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col\">\n                    <div class=\"info-block\">\n                        <div class=\"info-label\">Temp min :</div>\n                        <div class=\"info-value\">{{ sevenWeatherTempMin[dayIndex] }}°C</div>\n                    </div>\n                </div>\n                <div class=\"col\">\n                    <div class=\"info-block\">\n                        <div class=\"info-label\">Temp max :</div>\n                        <div class=\"info-value\">{{ sevenWeatherTempMax[dayIndex] }}°C</div>\n                    </div>\n                </div>\n            </div>\n            <hr>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <div class=\"info-block\">\n                        <div class=\"info-label\">Humidité :</div>\n                        <div style=\"height: 0.6vmax;\"></div>\n                        <div *ngIf=\"selectedHourForecast\" class=\"info-value\">\n                            <i class=\"fa-solid fa-droplet\"></i> :&nbsp;&nbsp;{{ selectedHourForecast.humidity }}\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col\">\n                    <div *ngIf=\"selectedHourForecast\" class=\"info-block-2\">\n                        <div class=\"info-label vent\">Vent :</div>\n\n                        <div class=\"info-value\"><i class=\"fa-solid fa-wind\"></i> :&nbsp;&nbsp;<br class=\"break-line\">{{\n                            selectedHourForecast.windSpeed\n                            }} km/h\n                        </div>\n                        <div class=\"info-direction\">\n                            <i class=\"fa-regular fa-compass\"></i> :&nbsp;&nbsp;\n                            <i class=\"fa-solid fa-angles-down\" *ngIf=\"selectedHourForecast.windSpeed > 50\"\n                                [ngStyle]=\"{'transform': 'rotate(' + selectedHourForecast.windDirection + 'deg)'}\"></i>\n                            <i class=\"fa-solid fa-circle-down\" *ngIf=\"selectedHourForecast.windSpeed < 50\"\n                                [ngStyle]=\"{'transform': 'rotate(' + selectedHourForecast.windDirection + 'deg)'}\"></i>\n                            <br class=\"break-line-2\">\n                            <span>\n                                {{ getWindDirection(selectedHourForecast.windDirection) }}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, SimpleChanges } from '@angular/core';\nimport { Location } from 'src/app/models/location';\nimport { Daily, Hourly, Weather } from 'src/app/models/weather';\nimport { SearchService } from 'src/app/services/search.service';\nimport { SiblingService } from 'src/app/services/sibling.service';\nimport { WeatherService } from 'src/app/services/weather.service';\n\n@Component({\n  selector: 'app-selected-day',\n  templateUrl: './selected-day.component.html',\n  styleUrls: ['./selected-day.component.scss']\n})\nexport class SelectedDayComponent {\n  @Input() public currentLocation!: Location;\n  @Input() public chosenLocation!: Location;\n  @Input() public weather!: Weather;\n\n  @Input() public dailyForecast!: Daily;\n  @Input() public dates!: string[];\n  @Input() public sevenWeather!: number[];\n  @Input() public sevenWeatherDescriptions!: string[];\n  @Input() public sevenWeatherIcons!: string[];\n  @Input() public sevenWeatherTempMin!: number[];\n  @Input() public sevenWeatherTempMax!: number[];\n  @Input() public sevenWeatherApparentTempMin!: number[];\n  @Input() public sevenWeatherApparentTempMax!: number[];\n  @Input() public sevenWeatherPrecipitationProbabilityMean!: number[]\n\n  @Input() public winddirection_10m!: number[];\n  @Input() public windspeed_10m!: number[];\n\n  public date: Date = new Date();\n  public currentHour: number = Number(this.date.getHours().toString().padStart(2, '0'));\n\n  public hourlyForecast!: Hourly;\n  public hours!: string[];\n  public hourlyWeather!: number[];\n  public hourlyWeatherDescriptions!: string[];\n  public hourlyWeatherIcons!: string[];\n  public hourlyWeatherTemp!: number[];\n  public hourlyWeatherApparentTemp!: number[];\n  public hourlyWeatherPrecipitationProbability!: number[]\n  public hourlyWeatherHumidity!: number[]\n\n  public currentHourForecast!: any;\n  public chosenPlace: any;\n\n  public selectedHourForecast: any;\n\n\n  public dayIndex!: number;\n  public hourIndex!: number;\n  public hourlyWeatherIconsNight!: string[];\n  public hourlyWeatherIsDay!: number[];\n  public displayNameChosenPlace!: string;\n\n  constructor(private weatherService: WeatherService, private searchService: SearchService, private siblingService: SiblingService) {\n    this.setIndexs()\n  }\n\n  setIndexs() {\n    const url = window.location.pathname;\n    const segments = url.split('/');\n    if (segments.length === 4) {\n      this.hourIndex = Number(segments[segments.length - 1]);\n      this.dayIndex = Number(segments[segments.length - 2]) - 1;\n    } else if (segments.length === 3) {\n      this.dayIndex = Number(segments[segments.length - 1]) - 1;\n      this.hourIndex = this.currentHour;\n    }\n  }\n\n\n  ngOnInit() {\n    this.searchService.getPlace().subscribe((osmObj) => {\n      this.chosenPlace = osmObj;\n      if (this.chosenPlace)\n        this.displayNameChosenPlace = this.chosenPlace.display_name.split(',')\n          .map((item: string) => item.trim())\n          .filter((_: any, index: number, array: string | any[]) => index === 0 || index === 1 || index === array.length - 2 || index === array.length - 1)\n          .join(', ');\n\n      this.getDailyForecast();\n      this.getHourlyForecast(this.dayIndex)\n    });\n    this.siblingService.getRefreshObservable().subscribe(() => {\n      this.setIndexs()\n      this.getHourlyForecast(this.dayIndex)\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['currentLocation'] || changes['hourIndex']) {\n      this.setIndexs();\n      this.getDailyForecast();\n      this.getHourlyForecast(this.dayIndex);\n    }\n  }\n\n\n  formatDate(date: string): string {\n    const weekdays = ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'];\n    const months = ['janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'];\n\n    const dateObj = new Date(date);\n    const dayOfWeek = weekdays[dateObj.getDay()];\n    const dayOfMonth = dateObj.getDate();\n    const month = months[dateObj.getMonth()];\n\n    return `${dayOfWeek} ${dayOfMonth} ${month}`;\n  }\n\n  getDailyForecast() {\n    if (this.chosenPlace)\n      this.weatherService.getWeatherForecast(this.chosenPlace.lat, this.chosenPlace.lon)\n        .subscribe(\n          (weather) => {\n            this.dates = weather.daily.time;\n            this.sevenWeatherTempMin = weather.daily.temperature_2m_min;\n            this.sevenWeatherTempMax = weather.daily.temperature_2m_max;\n            this.sevenWeatherApparentTempMin = weather.daily.apparent_temperature_min;\n            this.sevenWeatherApparentTempMax = weather.daily.apparent_temperature_max;\n            this.sevenWeatherPrecipitationProbabilityMean = weather.daily.precipitation_probability_mean;\n            this.sevenWeatherDescriptions = weather.daily.weathercode.map(code => this.weatherService.getWeatherDescription(code));\n            this.sevenWeatherIcons = weather.daily.weathercode.map(code => this.weatherService.getWeatherIcon(code));\n            this.winddirection_10m = weather.daily.winddirection_10m_dominant;\n            this.windspeed_10m = weather.daily.windspeed_10m_max;\n            return this.dailyForecast = weather.daily;\n          }\n        );\n    else if (this.currentLocation)\n      this.weatherService.getWeatherForecast(this.currentLocation.lat, this.currentLocation.lon)\n        .subscribe(\n          (weather) => {\n            this.dates = weather.daily.time;\n            this.sevenWeatherTempMin = weather.daily.temperature_2m_min;\n            this.sevenWeatherTempMax = weather.daily.temperature_2m_max;\n            this.sevenWeatherApparentTempMin = weather.daily.apparent_temperature_min;\n            this.sevenWeatherApparentTempMax = weather.daily.apparent_temperature_max;\n            this.sevenWeatherPrecipitationProbabilityMean = weather.daily.precipitation_probability_mean;\n            this.sevenWeatherDescriptions = weather.daily.weathercode.map(code => this.weatherService.getWeatherDescription(code));\n            this.sevenWeatherIcons = weather.daily.weathercode.map(code => this.weatherService.getWeatherIcon(code));\n            this.winddirection_10m = weather.daily.winddirection_10m_dominant;\n            this.windspeed_10m = weather.daily.windspeed_10m_max;\n            return this.dailyForecast = weather.daily;\n          }\n        );\n  }\n\n  getHourlyForecast(dayIndex: number) {\n    const startIndex = dayIndex * 24;\n    const endIndex = startIndex + 24;\n    if (this.chosenPlace) {\n      this.weatherService.getWeatherForecast(this.chosenPlace.lat, this.chosenPlace.lon)\n        .subscribe(\n          (weather) => {\n            this.hourlyForecast = weather.hourly;\n            this.hours = weather.hourly.time.slice(startIndex, endIndex).map(date => date.split('T')[1]);\n            this.hourlyWeatherTemp = weather.hourly.temperature_2m.slice(startIndex, endIndex);\n            this.hourlyWeatherApparentTemp = weather.hourly.apparent_temperature.slice(startIndex, endIndex);\n            this.hourlyWeatherPrecipitationProbability = weather.hourly.precipitation_probability.slice(startIndex, endIndex);\n            this.hourlyWeatherHumidity = weather.hourly.relativehumidity_2m.slice(startIndex, endIndex);\n            this.hourlyWeatherDescriptions = weather.hourly.weathercode.slice(startIndex, endIndex).map(code => this.weatherService.getWeatherDescription(code));\n            this.hourlyWeatherIsDay = this.hourlyForecast.is_day.slice(startIndex, endIndex);\n            this.hourlyWeatherIcons = this.hourlyForecast.weathercode.slice(startIndex, endIndex).map(code => this.weatherService.getWeatherIcon(code));\n            this.hourlyWeatherIconsNight = this.hourlyForecast.weathercode.slice(startIndex, endIndex).map(code => this.weatherService.getWeatherIconNight(code));\n            this.winddirection_10m = weather.hourly.winddirection_10m.slice(startIndex, endIndex);\n            this.windspeed_10m = weather.hourly.windspeed_10m.slice(startIndex, endIndex);\n\n            this.selectedHourForecast = this.getSelectedHourForecast(this.hourIndex);\n          }\n        );\n    } else if (this.currentLocation) {\n      this.weatherService.getWeatherForecast(this.currentLocation.lat, this.currentLocation.lon)\n        .subscribe(\n          (weather) => {\n            this.hourlyForecast = weather.hourly;\n            this.hours = weather.hourly.time.slice(startIndex, endIndex).map(date => date.split('T')[1]);\n            this.hourlyWeatherTemp = weather.hourly.temperature_2m.slice(startIndex, endIndex);\n            this.hourlyWeatherApparentTemp = weather.hourly.apparent_temperature.slice(startIndex, endIndex);\n            this.hourlyWeatherPrecipitationProbability = weather.hourly.precipitation_probability.slice(startIndex, endIndex);\n            this.hourlyWeatherHumidity = weather.hourly.relativehumidity_2m.slice(startIndex, endIndex);\n            this.hourlyWeatherDescriptions = weather.hourly.weathercode.slice(startIndex, endIndex).map(code => this.weatherService.getWeatherDescription(code));\n            this.hourlyWeatherIsDay = this.hourlyForecast.is_day.slice(startIndex, endIndex);\n            this.hourlyWeatherIcons = this.hourlyForecast.weathercode.slice(startIndex, endIndex).map(code => this.weatherService.getWeatherIcon(code));\n            this.hourlyWeatherIconsNight = this.hourlyForecast.weathercode.slice(startIndex, endIndex).map(code => this.weatherService.getWeatherIconNight(code));\n            this.winddirection_10m = weather.hourly.winddirection_10m.slice(startIndex, endIndex);\n            this.windspeed_10m = weather.hourly.windspeed_10m.slice(startIndex, endIndex);\n\n            this.selectedHourForecast = this.getSelectedHourForecast(this.hourIndex);\n          }\n        );\n    }\n  }\n\n\n  getSelectedHourForecast(i: number) {\n    const selectedHourForecast = {\n      hour: this.hours[i],\n      temperature: this.hourlyWeatherTemp[i],\n      apparentTemperature: this.hourlyWeatherApparentTemp[i],\n      precipitationProbability: this.hourlyWeatherPrecipitationProbability[i],\n      humidity: this.hourlyWeatherHumidity[i],\n      description: this.hourlyWeatherDescriptions[i],\n      isDay: this.hourlyWeatherIsDay[i],\n      icon: this.hourlyWeatherIcons[i],\n      iconNight: this.hourlyWeatherIconsNight[i],\n      windDirection: this.winddirection_10m[i],\n      windSpeed: this.windspeed_10m[i]\n    };\n    return selectedHourForecast;\n  }\n\n  getWindDirection(degrees: number): string {\n    if (degrees >= 348.75 || degrees < 11.25) {\n      return 'Nord';\n    } else if (degrees >= 11.25 && degrees < 33.75) {\n      return 'Nord-Nord-Est';\n    } else if (degrees >= 33.75 && degrees < 56.25) {\n      return 'Nord-Est';\n    } else if (degrees >= 56.25 && degrees < 78.75) {\n      return 'Est-Nord-Est';\n    } else if (degrees >= 78.75 && degrees < 101.25) {\n      return 'Est';\n    } else if (degrees >= 101.25 && degrees < 123.75) {\n      return 'Est-Sud-Est';\n    } else if (degrees >= 123.75 && degrees < 146.25) {\n      return 'Sud-Est';\n    } else if (degrees >= 146.25 && degrees < 168.75) {\n      return 'Sud-Sud-Est';\n    } else if (degrees >= 168.75 && degrees < 191.25) {\n      return 'Sud';\n    } else if (degrees >= 191.25 && degrees < 213.75) {\n      return 'Sud-Sud-Ouest';\n    } else if (degrees >= 213.75 && degrees < 236.25) {\n      return 'Sud-Ouest';\n    } else if (degrees >= 236.25 && degrees < 258.75) {\n      return 'Ouest-Sud-Ouest';\n    } else if (degrees >= 258.75 && degrees < 281.25) {\n      return 'Ouest';\n    } else if (degrees >= 281.25 && degrees < 303.75) {\n      return 'Ouest-Nord-Ouest';\n    } else if (degrees >= 303.75 && degrees < 326.25) {\n      return 'Nord-Ouest';\n    } else {\n      return 'Nord-Nord-Ouest';\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CurrentDayComponent } from './current-day/current-day.component';\nimport { SelectedDayComponent } from './selected-day/selected-day.component';\nimport { HourlyForecastComponent } from './hourly-forecast/hourly-forecast.component';\n\n@NgModule({\n  declarations: [\n    CurrentDayComponent,\n    SelectedDayComponent,\n    HourlyForecastComponent\n  ],\n  imports: [CommonModule],\n  exports: [\n    CurrentDayComponent,\n    SelectedDayComponent,\n    HourlyForecastComponent\n  ],\n})\nexport class ShortForecastModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppPageComponent } from './app-page/app-page.component';\nimport { SelectedDayComponent } from './app-page/components/short-forecast/selected-day/selected-day.component';\n\nconst routes: Routes = [\n    {\n        path: 'homepage',\n        redirectTo: 'day/1'\n    },\n    {\n        path: 'day',\n        children: Array.from({ length: 7 }, (_, dayIndex) => {\n            const dayChildren = Array.from({ length: 24 }, (_, hourIndex) => {\n                return {\n                    path: `${hourIndex}`,\n                    component: AppPageComponent\n                };\n            });\n\n            return {\n                path: `${dayIndex + 1}`,\n                component: AppPageComponent,\n                children: dayChildren\n            };\n        })\n    }\n];\n\n\n\n\n\n\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class PageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AppPageComponent } from './app-page/app-page.component';\nimport { ShortForecastModule } from './app-page/components/short-forecast/short-forecast.module';\nimport { LongForecastModule } from './app-page/components/long-forecast/long-forecast.module';\nimport { SevenDaysComponent } from './app-page/components/long-forecast/seven-days/seven-days.component';\nimport { CurrentDayComponent } from './app-page/components/short-forecast/current-day/current-day.component';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { PageRoutingModule } from './page-routing.module';\nimport { SearchModule } from '../core/search/search.module';\nimport { SearchBarComponent } from '../core/search/search-bar/search-bar.component';\nimport { SiblingService } from '../services/sibling.service';\n\n\n\n@NgModule({\n  declarations: [\n    AppPageComponent\n  ],\n  imports: [CommonModule, ShortForecastModule, LongForecastModule, PageRoutingModule, AppRoutingModule, SearchModule],\n  providers: [SiblingService],\n  exports: [CurrentDayComponent, SevenDaysComponent, AppPageComponent, SearchBarComponent],\n})\nexport class PageModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Location } from '../models/location';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChosenLocationService {\n  constructor(private http: HttpClient) { }\n\n  getLatAndLonFromSearch(q: string): Observable<Location[]> {\n    const url = `search_location_api_endpoint.php?q=${q}&format=jsonv2`;\n    const latAndLon = this.http.get<Location[]>(url);\n    return new Observable((observer) => {\n      latAndLon.subscribe(\n        (location) => {\n          observer.next(location);\n          observer.complete();\n        });\n    });\n\n    return latAndLon;\n  }\n} ","import { HttpClient } from '@angular/common/http';\nimport { EnvironmentInjector, Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Location } from '../models/location';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentLocationService {\n  constructor(private http: HttpClient) { }\n\n  getCurrentLocationFromBrowser(): Observable<Location> {\n    return new Observable((observer) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            const lat: number = position.coords.latitude;\n            const lon: number = position.coords.longitude;\n            this.getCurrentLocation(lat, lon).subscribe(\n              (location) => {\n                observer.next(location);\n                observer.complete();\n              }\n            );\n          },\n          (error) => {\n            observer.error(\n              'Erreur lors de la récupération de la position: ' + error.message\n            );\n          }\n        );\n      } else {\n        observer.error(\n          \"La géolocalisation n'est pas prise en charge par ce navigateur.\"\n        );\n      }\n    });\n  }\n\n  getCurrentLocation(lat: number, lon: number): Observable<Location> {\n    const url = `current_location_api_endpoint?lat=${lat}&lon=${lon}&format=json`;\n    return this.http.get<Location>(url)\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationImgService {\n\n  constructor(private http: HttpClient) { }\n\n  getImgFromLoc(q: string) {\n    const url = `https://api.unsplash.com/search/photos?query={${q}}&client_id=lp0WChyZl-mDw6uQ5O2RRXlw5pKnN409ObZdw54qIgw`\n    return this.http.get(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchService {\n  private place$ = new BehaviorSubject<any>(null);\n\n  constructor() { }\n\n  setPlace(osmObj: any) {\n    this.place$.next(osmObj); // Émet une nouvelle valeur sur le Subject\n  }\n\n  getPlace() {\n    return this.place$.asObservable(); // Renvoie l'Observable du Subject\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SiblingService {\n  private refreshSubject = new BehaviorSubject<undefined>(undefined); // Utilise BehaviorSubject\n\n  refreshSibling() {\n    this.refreshSubject.next(undefined);\n  }\n\n  getRefreshObservable() {\n    return this.refreshSubject.asObservable();\n  }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Weather } from '../models/weather';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WeatherService {\n\n  constructor(private http: HttpClient) { }\n\n  getWeatherForecast(latitude: number | string, longitude: number | string): Observable<Weather> {\n    const url = `weather_api_endpoint?latitude=${latitude}&longitude=${longitude}&elevation=44.812&hourly=temperature_2m,relativehumidity_2m,dewpoint_2m,apparent_temperature,pressure_msl,surface_pressure,cloudcover,cloudcover_low,cloudcover_mid,cloudcover_high,windspeed_10m,windspeed_80m,windspeed_120m,windspeed_180m,winddirection_10m,winddirection_80m,winddirection_120m,winddirection_180m,windgusts_10m,shortwave_radiation,direct_radiation,direct_normal_irradiance,diffuse_radiation,vapor_pressure_deficit,cape,evapotranspiration,et0_fao_evapotranspiration,precipitation,snowfall,precipitation_probability,rain,showers,weathercode,snow_depth,freezinglevel_height,visibility,soil_temperature_0cm,soil_temperature_6cm,soil_temperature_18cm,soil_temperature_54cm,soil_moisture_0_1cm,soil_moisture_1_3cm,soil_moisture_3_9cm,soil_moisture_9_27cm,soil_moisture_27_81cm,is_day&daily=temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,precipitation_sum,rain_sum,showers_sum,snowfall_sum,precipitation_hours,precipitation_probability_max,precipitation_probability_min,precipitation_probability_mean,weathercode,sunrise,sunset,windspeed_10m_max,windgusts_10m_max,winddirection_10m_dominant,shortwave_radiation_sum,et0_fao_evapotranspiration,uv_index_max,uv_index_clear_sky_max&current_weather=true&temperature_unit=celsius&windspeed_unit=kmh&precipitation_unit=mm&timezone=auto&forecast_days=7`;\n\n    return this.http.get<Weather>(url);\n  }\n\n  private weatherDescriptions: { [key: number]: string } = {\n    0: 'Ciel dégagé',\n    1: 'Principalement dégagé',\n    2: 'Partiellement nuageux',\n    3: 'Couvert',\n    45: 'Brouillard et givre',\n    48: 'Brouillard et givre',\n    51: 'Bruine légère',\n    53: 'Bruine modérée',\n    55: 'Bruine dense',\n    56: 'Bruine verglaçante légère',\n    57: 'Bruine verglaçante dense',\n    61: 'Pluie légère',\n    63: 'Pluie modérée',\n    65: 'Pluie forte',\n    66: 'Pluie verglaçante légère',\n    67: 'Pluie verglaçante forte',\n    71: 'Chute de neige légère',\n    73: 'Chute de neige modérée',\n    75: 'Chute de neige forte',\n    77: 'Grains de neige',\n    80: 'Averses de pluie légères',\n    81: 'Averses de pluie modérées',\n    82: 'Averses de pluie violentes',\n    85: 'Averses de neige légères',\n    86: 'Averses de neige fortes',\n    95: 'Orage faible ou modéré',\n    96: 'Orage avec grêle légère',\n    99: 'Orage avec grêle forte'\n  };\n\n  getWeatherDescription(code: number): string {\n    return this.weatherDescriptions[code] || '';\n  }\n\n  private weatherIcons: { [key: number]: string } = {\n    0: 'clear_sky.png',\n    1: 'light_clouds.png',\n    2: 'partly_cloudy.png',\n    3: 'cloudy.png',\n    45: 'light_fog.png',\n    48: 'dense_fog.png',\n    51: 'drizzle.png',\n    53: 'drizzle.png',\n    55: 'drizzle.png',\n    56: 'rain_snow_shower.png',\n    57: 'rain_snow.png',\n    61: 'rain.png',\n    63: 'rain.png',\n    65: 'rain.png',\n    66: 'freezing_rain.png',\n    67: 'freezing_rain.png',\n    71: 'snow.png',\n    73: 'snow.png',\n    75: 'snow.png',\n    77: 'snow.png',\n    80: 'rain_shower.png',\n    81: 'rain_shower.png',\n    82: 'rain_shower.png',\n    85: 'snow_shower.png',\n    86: 'snow_shower.png',\n    95: 'thunderstorms.png',\n    96: 'thunderstorms.png',\n    99: 'thunderstorms.png',\n  };\n\n  private nightWeatherIcons: { [key: number]: string } = {\n    0: 'clear_sky_night.png',\n    1: 'light_clouds_night.png',\n    2: 'partly_cloudy_night.png',\n    3: 'cloudy_night.png',\n    45: 'light_fog_night.png',\n    48: 'dense_fog.png',\n    51: 'drizzle.png',\n    53: 'drizzle.png',\n    55: 'drizzle.png',\n    56: 'sleet_showers_night.png',\n    57: 'rain_snow.png',\n    61: 'rain.png',\n    63: 'rain.png',\n    65: 'rain.png',\n    66: 'freezing_rain.png',\n    67: 'freezing_rain.png',\n    71: 'snow.png',\n    73: 'snow.png',\n    75: 'snow.png',\n    77: 'snow.png',\n    80: 'rain_showers_night.png',\n    81: 'rain_showers_night.png',\n    82: 'rain_showers_night.png',\n    85: 'snow_showers_night.png',\n    86: 'snow_showers_night.png',\n    95: 'thunderstorms.png',\n    96: 'thunderstorms.png',\n    99: 'thunderstorms.png',\n  };\n\n\n  getWeatherIcon(code: number): string {\n    return this.weatherIcons[code] || '';\n  }\n\n  getWeatherIconNight(code: number): string {\n    return this.nightWeatherIcons[code] || '';\n  }\n\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","routes","path","pathMatch","redirectTo","loadChildren","then","m","NotFoundRoutingModule","AppRoutingModule","forRoot","imports","exports","AppComponent","selectors","decls","vars","template","i0","BrowserModule","PageModule","ApiInterceptor","ErrorInterceptor","HTTP_INTERCEPTORS","HttpClientModule","NotFoundModule","AppModule","bootstrap","provide","useClass","multi","declarations","environment","constructor","intercept","request","next","modifiedRequest","url","includes","clone","search_location_api_endpoint","replace","current_location_api_endpoint","weather_api_endpoint","handle","factory","throwError","catchError","pipe","error","status","message","Error","NotFoundComponent","component","forChild","CommonModule","consts","toastr","SearchBarComponent","chosenLocationService","searchService","locationImgService","ngOnInit","startSlideshow","getPlace","subscribe","osmObj","locationFound","imgSearch","display_name","split","length","getImgFromLoc","response","photos","results","onSubmit","getPlaceName","locationInput","place","getLatAndLonFromSearch","closeButton","progressBar","timeOut","extendedTimeOut","tapToDismiss","toastClass","setPlace","setInterval","currentIndex","removePlaceholder","placeholderText","restorePlaceholder","ctx","FormsModule","SearchModule","AppPageComponent","currentLocationService","weatherService","Date","Number","date","getHours","toString","padStart","window","location","pathname","segments","hourIndex","dayIndex","currentHour","getCurrentLocationFromBrowser","currentLocation","SevenDaysComponent","LongForecastModule","router","siblingService","chosenPlace","getDailyForecast","ngOnChanges","changes","currentValue","getWeatherForecast","lat","lon","weather","dates","daily","time","sevenWeatherTempMin","temperature_2m_min","sevenWeatherTempMax","temperature_2m_max","sevenWeatherApparentTempMin","apparent_temperature_min","sevenWeatherApparentTempMax","apparent_temperature_max","sevenWeatherPrecipitationProbabilityMean","precipitation_probability_mean","sevenWeatherDescriptions","weathercode","map","code","getWeatherDescription","sevenWeatherIcons","getWeatherIcon","winddirection_10m","winddirection_10m_dominant","windspeed_10m","windspeed_10m_max","dailyForecast","formatDate","weekdays","months","dateObj","dayOfWeek","getDay","dayOfMonth","getDate","month","getMonth","inputs","chosenLocation","sevenWeather","features","CurrentDayComponent","setIndexs","getHourlyForecast","getRefreshObservable","startIndex","endIndex","hourlyForecast","hourly","hours","slice","hourlyWeatherTemp","temperature_2m","hourlyWeatherApparentTemp","apparent_temperature","hourlyWeatherPrecipitationProbability","precipitation_probability","hourlyWeatherHumidity","relativehumidity_2m","hourlyWeatherDescriptions","hourlyWeatherIsDay","is_day","hourlyWeatherIcons","hourlyWeatherIconsNight","getWeatherIconNight","currentHourForecast","getCurrentHourForecast","getSelectedHourForecast","currentHourIndex","findIndex","hour","temperature","apparentTemperature","precipitationProbability","humidity","description","isDay","icon","iconNight","windDirection","windSpeed","i","getWindDirection","degrees","HourlyForecastComponent","route","params","scrollToCurrentHour","cardContainer","nativeElement","currentHourCard","querySelector","scrollIntoView","behavior","inline","scrollToSelectedHour","selectedHourCard","scrollTo10","tenHourCard","isCurrentHour","currentHourToCompare","isSelectedHour","setTimeout","selectedHourForecast","navigateToHour","callCount","currentUrl","splice","push","newUrl","join","refreshSibling","navigateByUrl","viewQuery","SelectedDayComponent","displayNameChosenPlace","item","trim","filter","_","index","array","ShortForecastModule","children","Array","from","dayChildren","PageRoutingModule","SiblingService","Observable","ChosenLocationService","http","q","latAndLon","get","observer","complete","providedIn","CurrentLocationService","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","getCurrentLocation","LocationImgService","BehaviorSubject","SearchService","place$","asObservable","undefined","refreshSubject","WeatherService","weatherDescriptions","weatherIcons","nightWeatherIcons","__NgCli_bootstrap_1","bootstrapModule","catch","err","console"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}